{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/pages/ActivityParameterPage/ActivityParameterPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./ActivityParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport ActivityParameterInfo from \"../../components/ActivityParameterInfo/ActivityParameterInfo\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\n\nconst ActivityParameterPage = props => {\n  //console.log(props.activityParameters);\n  let nextButton = null;\n  let pathName = \"/activity-parameters\";\n  let popUp = null;\n\n  if (props.allActivitiesCompleted) {\n    pathName = \"/video-parameters\";\n  } else if (props.checkPopUp) {\n    popUp = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_top,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_bottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.popup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.square,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: classes.warning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Would you like to apply these parameters to all activities?\"), /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.warningMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"You have to enter activity parameters for all activities.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.applyAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, \"Yes, apply to all!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.manually,\n      onClick: props.applyManually,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"No, I will apply manually\")))));\n  }\n\n  if (props.hasActivityParameters) {\n    console.log(pathName);\n    nextButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.next,\n      onClick: props.routeToVideoParameterPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: classes.link_next,\n      to: {\n        pathname: pathName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"Next\"));\n  }\n\n  const activityparamquery = /*#__PURE__*/React.createElement(ActivityParameterInfo, {\n    currentActivity: props.currentActivity,\n    display: props.currentDisplay,\n    activityParameters: props.activityParameters,\n    onChange: props.updateParametersHandler,\n    switched: props.switched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.activityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, popUp, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectedActivities, {\n    selected: props.activities,\n    onClick: props.switchActivity,\n    currentActivity: props.currentActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), activityparamquery), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.routeBottons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.back,\n    onClick: props.routeBackToHomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link_back,\n    to: {\n      pathname: \"/\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Back\")), nextButton)));\n};\n\nexport default ActivityParameterPage;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/pages/ActivityParameterPage/ActivityParameterPage.js"],"names":["React","useState","useEffect","Link","classes","TopBar","ActivityParameterInfo","SelectedActivities","ActivityParameterPage","props","nextButton","pathName","popUp","allActivitiesCompleted","checkPopUp","overlay_left","overlay_right","overlay_top","overlay_bottom","overlay","popup","square","warning","warningMessage","actions","applyAll","manually","applyManually","hasActivityParameters","console","log","next","routeToVideoParameterPage","link_next","pathname","activityparamquery","currentActivity","currentDisplay","activityParameters","updateParametersHandler","switched","content","activities","switchActivity","routeBottons","back","routeBackToHomePage","link_back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./ActivityParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport ActivityParameterInfo from \"../../components/ActivityParameterInfo/ActivityParameterInfo\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\n\nconst ActivityParameterPage = (props) => {\n  //console.log(props.activityParameters);\n  let nextButton = null;\n  let pathName = \"/activity-parameters\";\n  let popUp = null;\n\n  if (props.allActivitiesCompleted) {\n    pathName = \"/video-parameters\";\n  } else if (props.checkPopUp) {\n    popUp = (\n      <>\n        <div className={classes.overlay_left} />\n        <div className={classes.overlay_right} />\n        <div className={classes.overlay_top} />\n        <div className={classes.overlay_bottom} />\n        <div className={classes.overlay}>\n          <div className={classes.popup}>\n            <div className={classes.square} />\n            <h2 className={classes.warning}>\n              Would you like to apply these parameters to all activities?\n            </h2>\n            <h3 className={classes.warningMessage}>\n              You have to enter activity parameters for all activities.\n            </h3>\n            <div className={classes.actions}>\n              <button className={classes.applyAll}>Yes, apply to all!</button>\n              <button\n                className={classes.manually}\n                onClick={props.applyManually}\n              >\n                No, I will apply manually\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  if (props.hasActivityParameters) {\n    console.log(pathName);\n    nextButton = (\n      <button\n        className={classes.next}\n        onClick={props.routeToVideoParameterPage}\n      >\n        <Link\n          className={classes.link_next}\n          to={{\n            pathname: pathName,\n          }}\n        >\n          Next\n        </Link>\n      </button>\n    );\n  }\n\n  const activityparamquery = (\n    <ActivityParameterInfo\n      currentActivity={props.currentActivity}\n      display={props.currentDisplay}\n      activityParameters={props.activityParameters}\n      onChange={props.updateParametersHandler}\n      switched={props.switched}\n    />\n  );\n\n  return (\n    <>\n      <TopBar />\n      <div className={classes.activityParameters}>\n        {popUp}\n        <div className={classes.content}>\n          <SelectedActivities\n            selected={props.activities}\n            onClick={props.switchActivity}\n            currentActivity={props.currentActivity}\n          />\n          {activityparamquery}\n        </div>\n        <div className={classes.routeBottons}>\n          <button className={classes.back} onClick={props.routeBackToHomePage}>\n            <Link\n              className={classes.link_back}\n              to={{\n                pathname: \"/\",\n              }}\n            >\n              Back\n            </Link>\n          </button>\n          {nextButton}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ActivityParameterPage;\n"]},"metadata":{},"sourceType":"module"}