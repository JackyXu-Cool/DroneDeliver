{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/pages/ActivityParameterPage/ActivityParameterPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./ActivityParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport ActivityParameterInfo from \"../../components/ActivityParameterInfo/ActivityParameterInfo\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\n\nconst ActivityParameterPage = props => {\n  //console.log(props.activityParameters);\n  let nextButton = null;\n  let pathname = \"/activity-parameters\";\n\n  if (props.hasActivityParameters) {\n    nextButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.next,\n      onClick: props.routeToVideoParameterPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: classes.link_next,\n      to: {\n        //pathname: \"/video-parameters\",\n        pathname: \"/activity-parameters\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"Next\"));\n  }\n\n  const activityparamquery = /*#__PURE__*/React.createElement(ActivityParameterInfo, {\n    currentActivity: props.currentActivity,\n    activityParameters: props.activityParameters,\n    onChange: props.updateParametersHandler,\n    switched: props.switched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.activityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay_left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay_right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay_top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay_bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.popup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.square,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Would you like to apply these parameters to all activities?\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.warningMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"You have to enter activity parameters for all activities.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.applyAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Yes, apply to all!\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.applyAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"No, I will apply manually\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectedActivities, {\n    selected: props.activities,\n    onClick: props.switchActivity,\n    currentActivity: props.currentActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), activityparamquery), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.routeBottons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.back,\n    onClick: props.routeBackToHomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link_back,\n    to: {\n      pathname: \"/\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Back\")), nextButton)));\n};\n\nexport default ActivityParameterPage;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/pages/ActivityParameterPage/ActivityParameterPage.js"],"names":["React","useState","useEffect","Link","classes","TopBar","ActivityParameterInfo","SelectedActivities","ActivityParameterPage","props","nextButton","pathname","hasActivityParameters","next","routeToVideoParameterPage","link_next","activityparamquery","currentActivity","activityParameters","updateParametersHandler","switched","overlay_left","overlay_right","overlay_top","overlay_bottom","overlay","popup","square","warning","warningMessage","actions","applyAll","content","activities","switchActivity","routeBottons","back","routeBackToHomePage","link_back"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./ActivityParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport ActivityParameterInfo from \"../../components/ActivityParameterInfo/ActivityParameterInfo\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\n\nconst ActivityParameterPage = (props) => {\n  //console.log(props.activityParameters);\n  let nextButton = null;\n  let pathname = \"/activity-parameters\";\n\n  if (props.hasActivityParameters) {\n    nextButton = (\n      <button\n        className={classes.next}\n        onClick={props.routeToVideoParameterPage}\n      >\n        <Link\n          className={classes.link_next}\n          to={{\n            //pathname: \"/video-parameters\",\n            pathname: \"/activity-parameters\",\n          }}\n        >\n          Next\n        </Link>\n      </button>\n    );\n  }\n\n  const activityparamquery = (\n    <ActivityParameterInfo\n      currentActivity={props.currentActivity}\n      activityParameters={props.activityParameters}\n      onChange={props.updateParametersHandler}\n      switched={props.switched}\n    />\n  );\n\n  return (\n    <>\n      <TopBar />\n      <div className={classes.activityParameters}>\n        <div className={classes.overlay_left} />\n        <div className={classes.overlay_right} />\n        <div className={classes.overlay_top} />\n        <div className={classes.overlay_bottom} />\n        <div className={classes.overlay}>\n          <div className={classes.popup}>\n            <div className={classes.square} />\n            <h2 className={classes.warning}>\n              Would you like to apply these parameters to all activities?\n            </h2>\n            <h3 className={classes.warningMessage}>\n              You have to enter activity parameters for all activities.\n            </h3>\n            <div className={classes.actions}>\n              <button className={classes.applyAll}>Yes, apply to all!</button>\n              <button className={classes.applyAll}>\n                No, I will apply manually\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className={classes.content}>\n          <SelectedActivities\n            selected={props.activities}\n            onClick={props.switchActivity}\n            currentActivity={props.currentActivity}\n          />\n          {activityparamquery}\n        </div>\n        <div className={classes.routeBottons}>\n          <button className={classes.back} onClick={props.routeBackToHomePage}>\n            <Link\n              className={classes.link_back}\n              to={{\n                pathname: \"/\",\n              }}\n            >\n              Back\n            </Link>\n          </button>\n          {nextButton}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ActivityParameterPage;\n"]},"metadata":{},"sourceType":"module"}