{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/pages/ActivityParameterPage/ActivityParameterPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./ActivityParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport ActivityParameterInfo from \"../../components/ActivityParameterInfo/ActivityParameterInfo\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\n\nconst ActivityParameterPage = props => {\n  console.log(props.activityParameters);\n  useEffect(() => {\n    console.log(\"switched?\", props.firstSwitch);\n\n    if (!props.firstSwitch) {\n      setDisplay(props.currentActivity);\n    }\n  });\n  let activityparamquery = null;\n\n  if (currentActivity) {\n    activityparamquery = /*#__PURE__*/React.createElement(ActivityParameterInfo, {\n      currentActivity: props.currentActivity,\n      activityParameters: props.activityParameters,\n      onChange: props.updateParametersHandler,\n      display: props.currentDisplay,\n      switched: props.switched,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.activityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectedActivities, {\n    selected: props.activities,\n    onClick: props.switchActivity,\n    currentActivity: props.currentActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), activityparamquery), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.routeBottons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.back,\n    onClick: props.routeBackToHomePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link_back,\n    to: {\n      pathname: \"/\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.next,\n    onClick: props.routeToVideoParameterPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.link_next,\n    to: {\n      pathname: \"/video-parameters\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Next\")))));\n};\n\nexport default ActivityParameterPage;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/pages/ActivityParameterPage/ActivityParameterPage.js"],"names":["React","useState","useEffect","Link","classes","TopBar","ActivityParameterInfo","SelectedActivities","ActivityParameterPage","props","console","log","activityParameters","firstSwitch","setDisplay","currentActivity","activityparamquery","updateParametersHandler","currentDisplay","switched","content","activities","switchActivity","routeBottons","back","routeBackToHomePage","link_back","pathname","next","routeToVideoParameterPage","link_next"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,qBAAP,MAAkC,8DAAlC;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,kBAAlB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAK,CAACI,WAA/B;;AACA,QAAI,CAACJ,KAAK,CAACI,WAAX,EAAwB;AACtBC,MAAAA,UAAU,CAACL,KAAK,CAACM,eAAP,CAAV;AACD;AACF,GALQ,CAAT;AAOA,MAAIC,kBAAkB,GAAG,IAAzB;;AACA,MAAID,eAAJ,EAAqB;AACnBC,IAAAA,kBAAkB,gBAChB,oBAAC,qBAAD;AACE,MAAA,eAAe,EAAEP,KAAK,CAACM,eADzB;AAEE,MAAA,kBAAkB,EAAEN,KAAK,CAACG,kBAF5B;AAGE,MAAA,QAAQ,EAAEH,KAAK,CAACQ,uBAHlB;AAIE,MAAA,OAAO,EAAER,KAAK,CAACS,cAJjB;AAKE,MAAA,QAAQ,EAAET,KAAK,CAACU,QALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACQ,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACgB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,QAAQ,EAAEX,KAAK,CAACY,UADlB;AAEE,IAAA,OAAO,EAAEZ,KAAK,CAACa,cAFjB;AAGE,IAAA,eAAe,EAAEb,KAAK,CAACM,eAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGC,kBANH,CADF,eASE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACmB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAEnB,OAAO,CAACoB,IAA3B;AAAiC,IAAA,OAAO,EAAEf,KAAK,CAACgB,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAErB,OAAO,CAACsB,SADrB;AAEE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAWE;AACE,IAAA,SAAS,EAAEvB,OAAO,CAACwB,IADrB;AAEE,IAAA,OAAO,EAAEnB,KAAK,CAACoB,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,SADrB;AAEE,IAAA,EAAE,EAAE;AACFH,MAAAA,QAAQ,EAAE;AADR,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAXF,CATF,CAFF,CADF;AAwCD,CA/DD;;AAgEA,eAAenB,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./ActivityParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport ActivityParameterInfo from \"../../components/ActivityParameterInfo/ActivityParameterInfo\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\n\nconst ActivityParameterPage = (props) => {\n  console.log(props.activityParameters);\n\n  useEffect(() => {\n    console.log(\"switched?\", props.firstSwitch);\n    if (!props.firstSwitch) {\n      setDisplay(props.currentActivity);\n    }\n  });\n\n  let activityparamquery = null;\n  if (currentActivity) {\n    activityparamquery = (\n      <ActivityParameterInfo\n        currentActivity={props.currentActivity}\n        activityParameters={props.activityParameters}\n        onChange={props.updateParametersHandler}\n        display={props.currentDisplay}\n        switched={props.switched}\n      />\n    );\n  }\n\n  return (\n    <>\n      <TopBar />\n      <div className={classes.activityParameters}>\n        <div className={classes.content}>\n          <SelectedActivities\n            selected={props.activities}\n            onClick={props.switchActivity}\n            currentActivity={props.currentActivity}\n          />\n          {activityparamquery}\n        </div>\n        <div className={classes.routeBottons}>\n          <button className={classes.back} onClick={props.routeBackToHomePage}>\n            <Link\n              className={classes.link_back}\n              to={{\n                pathname: \"/\",\n              }}\n            >\n              Back\n            </Link>\n          </button>\n          <button\n            className={classes.next}\n            onClick={props.routeToVideoParameterPage}\n          >\n            <Link\n              className={classes.link_next}\n              to={{\n                pathname: \"/video-parameters\",\n              }}\n            >\n              Next\n            </Link>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ActivityParameterPage;\n"]},"metadata":{},"sourceType":"module"}