{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/pages/SearchParametersPage/SearchParameterPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./SearchParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\nimport SearchParameterInfo from \"../../components/SearchParameterInfo/SearchParameterInfo\";\n\nconst SearchParameterPage = props => {\n  //console.log(props.videoParameters);\n  let nextButton = null;\n  let pathName = \"/video-parameters\";\n  let popUp = null;\n\n  if (props.allVideosCompleted) {\n    pathName = \"/video-selection\"; //need that pathName of next page\n  } else if (props.checkPopUp) {\n    popUp = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_top,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay_bottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.popup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.square,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: classes.warning,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Would you like to apply these parameters to all activities?\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.warningMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"You have yet entered video parameters for all activities. However, we can help you apply video parameters of this activity to all incomplete activities.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.applyAll,\n      onClick: props.applyAllVideoParameters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \"Yes, apply to all!\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.manually,\n      onClick: props.applyManually,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"No, I will apply manually\")))));\n  }\n\n  if (props.hasVideoParameters) {\n    nextButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.next,\n      onClick: props.routeToVideoSelectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: classes.link_next,\n      to: {\n        pathname: pathName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Next\"));\n  } else {\n    nextButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.nextDisabled,\n      onClick: props.routeToVideoSelectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: classes.link_next,\n      to: {\n        pathname: pathName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Next\"));\n  }\n\n  const videoparamquery = /*#__PURE__*/React.createElement(SearchParameterInfo, {\n    currentActivity: props.currentActivity,\n    display: props.currentDisplay,\n    videoParameters: props.videoParameters,\n    onChange: props.updateVideoParametersHandler,\n    switched: props.switched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.videoParamaters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, popUp, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectedActivities, {\n    selected: props.activities,\n    onClick: props.switchActivity,\n    currentActivity: props.currentActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), videoparamquery), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.routeButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.back,\n    onClick: props.routeBackToActivityParameterPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: classes.linkBack,\n    to: {\n      pathname: \"/activity-parameters\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Back\")), nextButton)));\n};\n\nexport default SearchParameterPage;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/pages/SearchParametersPage/SearchParameterPage.js"],"names":["React","useState","useEffect","Link","classes","TopBar","SelectedActivities","SearchParameterInfo","SearchParameterPage","props","nextButton","pathName","popUp","allVideosCompleted","checkPopUp","overlay_left","overlay_right","overlay_top","overlay_bottom","overlay","popup","square","warning","warningMessage","actions","applyAll","applyAllVideoParameters","manually","applyManually","hasVideoParameters","next","routeToVideoSelectionPage","link_next","pathname","nextDisabled","videoparamquery","currentActivity","currentDisplay","videoParameters","updateVideoParametersHandler","switched","videoParamaters","content","activities","switchActivity","routeButtons","back","routeBackToActivityParameterPage","linkBack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./SearchParameterPage.module.scss\";\nimport TopBar from \"../../components/TopBar/TopBar\";\nimport SelectedActivities from \"../../components/SelectedActivities/SelectedActivities\";\nimport SearchParameterInfo from \"../../components/SearchParameterInfo/SearchParameterInfo\";\n\nconst SearchParameterPage = (props) => {\n  //console.log(props.videoParameters);\n  let nextButton = null;\n  let pathName = \"/video-parameters\";\n  let popUp = null;\n\n  if (props.allVideosCompleted) {\n    pathName = \"/video-selection\"; //need that pathName of next page\n  } else if (props.checkPopUp) {\n    popUp = (\n      <>\n        <div className={classes.overlay_left} />\n        <div className={classes.overlay_right} />\n        <div className={classes.overlay_top} />\n        <div className={classes.overlay_bottom} />\n        <div className={classes.overlay}>\n          <div className={classes.popup}>\n            <div className={classes.square} />\n            <h2 className={classes.warning}>\n              Would you like to apply these parameters to all activities?\n            </h2>\n            <p className={classes.warningMessage}>\n              You have yet entered video parameters for all activities. However,\n              we can help you apply video parameters of this activity to all\n              incomplete activities.\n            </p>\n            <div className={classes.actions}>\n              <button\n                className={classes.applyAll}\n                onClick={props.applyAllVideoParameters}\n              >\n                Yes, apply to all!\n              </button>\n              <button\n                className={classes.manually}\n                onClick={props.applyManually}\n              >\n                No, I will apply manually\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  if (props.hasVideoParameters) {\n    nextButton = (\n      <button\n        className={classes.next}\n        onClick={props.routeToVideoSelectionPage}\n      >\n        <Link\n          className={classes.link_next}\n          to={{\n            pathname: pathName,\n          }}\n        >\n          Next\n        </Link>\n      </button>\n    );\n  } else {\n    nextButton = (\n      <button\n        className={classes.nextDisabled}\n        onClick={props.routeToVideoSelectionPage}\n      >\n        <Link\n          className={classes.link_next}\n          to={{\n            pathname: pathName,\n          }}\n        >\n          Next\n        </Link>\n      </button>\n    );\n  }\n\n  const videoparamquery = (\n    <SearchParameterInfo\n      currentActivity={props.currentActivity}\n      display={props.currentDisplay}\n      videoParameters={props.videoParameters}\n      onChange={props.updateVideoParametersHandler}\n      switched={props.switched}\n    />\n  );\n\n  return (\n    <>\n      <TopBar />\n      <div className={classes.videoParamaters}>\n        {popUp}\n        <div className={classes.content}>\n          <SelectedActivities\n            selected={props.activities}\n            onClick={props.switchActivity}\n            currentActivity={props.currentActivity}\n          />\n          {videoparamquery}\n        </div>\n        <div className={classes.routeButtons}>\n          <button\n            className={classes.back}\n            onClick={props.routeBackToActivityParameterPage}\n          >\n            <Link\n              className={classes.linkBack}\n              to={{\n                pathname: \"/activity-parameters\",\n              }}\n            >\n              Back\n            </Link>\n          </button>\n          {nextButton}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchParameterPage;\n"]},"metadata":{},"sourceType":"module"}