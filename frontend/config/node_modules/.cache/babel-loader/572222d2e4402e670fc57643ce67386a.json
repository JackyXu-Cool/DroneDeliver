{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/App.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActivityParameterPage from \"./pages/ActivityParameterPage/ActivityParameterPage\";\nimport VideoParameterPage from \"./pages/VideoParametersPage/VideoParameterPage\";\nimport VideoSelectionPage from \"./pages/VideoSelectionPage/VideoSelectionPage\";\n\nconst App = () => {\n  /* Global States */\n  const [activities, setActivities] = useState([]);\n  const [hasActivities, setHasActivites] = useState(false);\n  const [currentActivity, setCurrentActivity] = useState(\"\");\n  const [currentPath, setCurrentPath] = useState(\"/\");\n  /* Homapage States */\n\n  const [tags, setTags] = useState([]);\n  const suggested = [{\n    id: \"Singing\",\n    name: \"Singing\"\n  }, {\n    id: \"Dancing\",\n    name: \"Dancing\"\n  }, {\n    id: \"Kicking\",\n    name: \"Kicking\"\n  }, {\n    id: \"Typing\",\n    name: \"Typing\"\n  }, {\n    id: \"Running\",\n    name: \"Running\"\n  }, {\n    id: \"Lifting\",\n    name: \"Lifting\"\n  }];\n  /* Activity Parameter States */\n\n  const [activityParameters, setActivityParameters] = useState([]);\n  const [switched, setSwitch] = useState(false);\n  const [currentDisplay, setDisplay] = useState({});\n  const [hasActivityParameters, setHasActivityParameters] = useState(false);\n  const [allActivitiesCompleted, setAllActivitiesCompleted] = useState(false);\n  const [checkPopUp, setCheckPopUp] = useState(false);\n  /* Video Parameter States */\n\n  const [videoParameters, setVideoParameters] = useState([]);\n  const [hasVideoParameters, setHasVideoParameters] = useState(false);\n  const [allVideosCompleted, setAllVideosCompleted] = useState(false);\n  /***----------------------------Homepage Handlers-----------------------------***/\n\n  const addFromSelected = event => {\n    const suggested = event.target.name.toString();\n    console.log({\n      id: suggested,\n      text: suggested\n    });\n\n    if (!activities.some(a => a.id === suggested && a.name === suggested)) {\n      const tempActivities = [...activities];\n      const tempTags = [...tags];\n      tempTags.push({\n        id: suggested,\n        text: suggested\n      });\n      tempActivities.push({\n        id: suggested,\n        name: suggested\n      });\n      setHasActivites(true);\n      setActivities(tempActivities);\n      setTags(tempTags);\n      console.log(\"activities:\", activities);\n    }\n  };\n\n  const addActivityHandler = tag => {\n    const tempTags = [...tags];\n    tempTags.push(tag);\n    console.log(tags);\n    const tempActivities = [...activities];\n    tempActivities.push({\n      id: tag.id,\n      name: tag.text\n    });\n    setTags(tempTags);\n    setActivities(tempActivities);\n    setHasActivites(true);\n  };\n\n  const deleteActivityHandler = index => {\n    const tempTags = [...tags];\n    const tempActivities = [...activities];\n    tempTags.splice(index, 1);\n    tempActivities.splice(index, 1);\n    console.log(tempTags);\n\n    if (tempTags.length === 0) {\n      setHasActivites(false);\n    }\n\n    setTags(tempTags);\n    setActivities(tempActivities);\n  };\n\n  const routeToActivityParameters = event => {\n    const temp = [];\n    console.log(\"activity length: \", activities.length);\n\n    for (var i = 0; i < activities.length; i++) {\n      let current = activities[i];\n      let currentId = current.id;\n      let flag = false;\n      let tempActivity = {};\n\n      for (var j = 0; j < activityParameters.length; j++) {\n        if (activityParameters[j].id === currentId) {\n          flag = true;\n          tempActivity = activityParameters[j];\n          break;\n        }\n      }\n\n      if (flag) {\n        temp.push(tempActivity);\n      } else {\n        temp.push({\n          id: currentId,\n          fromFt: \"\",\n          fromIn: \"\",\n          toFt: \"\",\n          toIn: \"\",\n          fromBMI: \"\",\n          toBMI: \"\"\n        });\n      }\n    }\n\n    console.log(\"temp: \", temp);\n    setActivityParameters(temp); //console.log(\"actvitivy params\", activityParameters);\n\n    setCurrentActivity(activities[0].id);\n    setDisplay(temp[0]);\n\n    if (temp[0].forFt !== \"\" && temp[0].forIn !== \"\" && temp[0].toFt !== \"\" && temp[0].toIn !== \"\" && temp[0].fromBMI !== \"\" && temp[0].toBMI !== \"\") {\n      setHasActivityParameters(true);\n    } else {\n      setHasActivityParameters(false);\n    }\n\n    setSwitch(true);\n    setCurrentPath(\"/activity-parameters\");\n  };\n  /***-------------------------End of Homepage Handlers-----------------------------***/\n\n  /***-----------------------Activity Parameter Page Handlers-----------------------***/\n\n\n  const updateActivityParametersHandler = event => {\n    setSwitch(false);\n    console.log(switched);\n    const name = event.target.name;\n    let value = event.target.value;\n    const temp = activityParameters;\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === currentActivity) {\n        if (name === \"fromFt\") {\n          temp[i].fromFt = value;\n        } else if (name === \"fromIn\") {\n          temp[i].fromIn = value;\n        } else if (name === \"toFt\") {\n          temp[i].toFt = value;\n        } else if (name === \"toIn\") {\n          temp[i].toIn = value;\n        } else if (name === \"fromBMI\") {\n          temp[i].fromBMI = value;\n        } else if (name === \"toBMI\") {\n          temp[i].toBMI = value;\n        }\n\n        const activity = temp[i];\n\n        if (activity.id === currentActivity) {\n          console.log(\"activity check: \", activity);\n\n          if (activity.fromFt !== \"\" && activity.fromIn !== \"\" && activity.fromBMI !== \"\" && activity.toBMI !== \"\" && activity.toIn !== \"\" && activity.toFt !== \"\") {\n            setHasActivityParameters(true);\n            break;\n          } else {\n            setHasActivityParameters(false);\n          }\n        }\n      }\n    }\n\n    let flag = true;\n\n    for (var j = 0; j < temp.length; j++) {\n      const temp_activity = temp[j];\n\n      if (temp_activity.fromFt === \"\" || temp_activity.fromIn === \"\" || temp_activity.fromBMI === \"\" || temp_activity.toBMI === \"\" || temp_activity.toIn === \"\" || temp_activity.toFt === \"\") {\n        setAllActivitiesCompleted(false);\n        flag = false;\n        break;\n      } //console.log(activityParameters);\n\n\n      console.log(\"all completed?\", allActivitiesCompleted);\n    }\n\n    if (flag) {\n      setAllActivitiesCompleted(true);\n    }\n\n    setActivityParameters(temp);\n  };\n\n  const switchActivityParameters = event => {\n    const name = event.target.name;\n    const prev = currentActivity;\n\n    if (name !== prev) {\n      setSwitch(true);\n      setHasActivityParameters(false);\n      console.log(\"switched!!\"); //console.log(currentPath);\n    }\n\n    setCurrentActivity(name);\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === name) {\n        //console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n        setDisplay(activityParameters[i]);\n        console.log(activityParameters[i]);\n\n        if (switched) {\n          if (activityParameters[i].fromFt !== \"\" && activityParameters[i].fromIn !== \"\" && activityParameters[i].fromBMI !== \"\" && activityParameters[i].toBMI !== \"\" && activityParameters[i].toIn !== \"\" && activityParameters[i].toFt !== \"\") {\n            setHasActivityParameters(true);\n          }\n        }\n\n        console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n        break;\n      }\n    }\n\n    console.log(\"switched\", switched);\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === name) {\n        const activity = activityParameters[i];\n\n        if (activity.id === name) {\n          console.log(\"activity check: \", activity);\n\n          if (activity.fromFt !== \"\" && activity.fromIn !== \"\" && activity.fromBMI !== \"\" && activity.toBMI !== \"\" && activity.toIn !== \"\" && activity.toFt !== \"\") {\n            setHasActivityParameters(true);\n          }\n\n          break;\n        }\n      }\n    }\n  };\n\n  const routeBackToHomePage = event => {\n    setCurrentPath(\"/\");\n    setCurrentActivity(\"\");\n  };\n\n  const routeToVideoParameterPage = event => {\n    if (allActivitiesCompleted) {\n      setCheckPopUp(false);\n      const temp = [];\n\n      for (var i = 0; i < activities.length; i++) {\n        let current = activities[i];\n        let currentId = current.id;\n        let flag = false;\n        let tempActivity = {};\n\n        for (var j = 0; j < videoParameters.length; j++) {\n          if (videoParameters[j].id === currentId) {\n            flag = true;\n            tempActivity = videoParameters[j];\n            break;\n          }\n        }\n\n        if (flag) {\n          temp.push(tempActivity);\n        } else {\n          temp.push({\n            id: currentId,\n            numPeople: \"\",\n            numVideo: \"\",\n            fromMin: \"\",\n            toMin: \"\",\n            resolution: \"\"\n          });\n        }\n      }\n\n      setVideoParameters(temp);\n      console.log(\"video params\", videoParameters);\n      setCurrentActivity(activities[0].id);\n      setDisplay(temp[0]);\n      setSwitch(true);\n    } else {\n      setCheckPopUp(true);\n    }\n  };\n\n  const applyManually = event => {\n    setCheckPopUp(false);\n  };\n\n  const applyAllActivityParameters = event => {\n    var temp = [];\n    var base = null; //console.log(\"ACPs:\", activityParameters);\n\n    console.log(\"current display: \", currentDisplay);\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === currentActivity) {\n        setDisplay(activityParameters[i]);\n        base = activityParameters[i];\n      }\n    }\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      const temp_activity = activityParameters[i];\n\n      if (temp_activity.fromFt === \"\" || temp_activity.fromIn === \"\" || temp_activity.fromBMI === \"\" || temp_activity.toBMI === \"\" || temp_activity.toIn === \"\" || temp_activity.toFt === \"\") {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: base.fromFt,\n          fromIn: base.fromIn,\n          fromBMI: base.fromBMI,\n          toBMI: base.toBMI,\n          toIn: base.toIn,\n          toFt: base.toFt\n        });\n      } else {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: temp_activity.fromFt,\n          fromIn: temp_activity.fromIn,\n          fromBMI: temp_activity.fromBMI,\n          toBMI: temp_activity.toBMI,\n          toIn: temp_activity.toIn,\n          toFt: temp_activity.toFt\n        });\n      }\n    }\n\n    setActivityParameters(temp);\n    setAllActivitiesCompleted(true);\n    setCheckPopUp(false);\n    setHasActivityParameters(true);\n    console.log(\"ACPs:\", temp);\n    setSwitch(true);\n  };\n  /***--------------------End of Activity Parameter Page Handlers----------------***/\n\n  /***-----------------------Video Parameter Page Handlers-----------------------***/\n\n\n  const updateVideoParametersHandler = event => {\n    setSwitch(false);\n    console.log(switched);\n    const name = event.target.name;\n    let value = event.target.value;\n    const temp = videoParameters;\n\n    for (var i = 0; i < videoParameters.length; i++) {\n      if (videoParameters[i].id === currentActivity) {\n        if (name === \"numPeople\") {\n          temp[i].numPeople = value;\n        } else if (name === \"numVideo\") {\n          temp[i].numVideo = value;\n        } else if (name === \"fromMin\") {\n          temp[i].fromMin = value;\n        } else if (name === \"toMin\") {\n          temp[i].toMin = value;\n        } else if (name === \"resolution\") {\n          temp[i].resolution = value;\n        }\n\n        const activity = temp[i];\n\n        if (activity.id === currentActivity) {\n          if (activity.numPeople !== \"\" && activity.numVideo !== \"\" && activity.fromMin !== \"\" && activity.toMin !== \"\" && activity.resolution !== \"\") {\n            setHasVideoParameters(true);\n            break;\n          } else {\n            setHasVideoParameters(false);\n          }\n        } //setDisplay(temp[i]);\n        //break;\n\n      }\n    }\n\n    let flag = true;\n\n    for (var j = 0; j < temp.length; j++) {\n      const temp_activity = temp[j];\n\n      if (temp_activity.numPeople === \"\" || temp_activity.numVideo === \"\" || temp_activity.fromMin === \"\" || temp_activity.toMin === \"\" || temp_activity.resolution === \"\") {\n        setAllVideosCompleted(false);\n        flag = false;\n        break;\n      }\n    }\n\n    if (flag) {\n      setAllVideosCompleted(true);\n    }\n\n    setVideoParameters(temp); //console.log(\"video parameters: \", videoParameters);\n  };\n\n  const switchVideoParameters = event => {\n    const name = event.target.name;\n    const prev = currentActivity;\n\n    if (name !== prev) {\n      setSwitch(true);\n      setHasVideoParameters(false);\n      console.log(\"switched!!\"); //console.log(currentPath);\n    }\n\n    setCurrentActivity(name);\n\n    for (var i = 0; i < videoParameters.length; i++) {\n      if (videoParameters[i].id === name) {\n        setDisplay(videoParameters[i]);\n\n        if (switched) {\n          if (videoParameters[i].numPeople !== \"\" && videoParameters[i].numVideo !== \"\" && videoParameters[i].fromMin !== \"\" && videoParameters[i].toMin !== \"\" && videoParameters[i].resolution !== \"\") {\n            setHasVideoParameters(true);\n          }\n        }\n\n        break;\n      }\n    }\n\n    for (var i = 0; i < videoParameters.length; i++) {\n      if (videoParameters[i].id === name) {\n        const activity = videoParameters[i];\n\n        if (activity.id === name) {\n          if (activity.numPeople !== \"\" && activity.numVideo !== \"\" && activity.fromMin !== \"\" && activity.toMin !== \"\" && activity.resolution !== \"\") {\n            setHasVideoParameters(true);\n          }\n\n          break;\n        }\n      }\n    }\n  };\n\n  const routeBackToActivityParameterPage = event => {\n    setCurrentPath(\"/activity-parameters\");\n    setCurrentActivity(activityParameters[0].id);\n    setDisplay(activityParameters[0]);\n    setHasVideoParameters(true);\n  };\n\n  const routeToVideoSelectionPage = event => {\n    if (allVideosCompleted) {\n      setCheckPopUp(false);\n      const temp = [];\n\n      for (var i = 0; i < activities.length; i++) {\n        let current = activities[i];\n        let currentId = current.id;\n        let flag = false;\n        let tempActivity = {};\n\n        for (var j = 0; j < videoParameters.length; j++) {\n          if (videoParameters[j].id === currentId) {\n            flag = true;\n            tempActivity = videoParameters[j];\n            break;\n          }\n        }\n\n        if (flag) {\n          temp.push(tempActivity);\n        } else {\n          temp.push({\n            id: currentId,\n            numPeople: \"\",\n            numVideo: \"\",\n            fromMin: \"\",\n            toMin: \"\",\n            resolution: \"\"\n          });\n        }\n      }\n\n      console.log(\"temp: \", temp);\n      setVideoParameters(temp);\n      console.log(\"video params\", videoParameters);\n      setCurrentActivity(activities[0].id);\n      setDisplay(temp[0]);\n      setSwitch(true);\n    } else {\n      setCheckPopUp(true);\n    }\n  };\n\n  const applyAllVideoParameters = event => {\n    var temp = [];\n    var base = null; //console.log(\"ACPs:\", videoParameters);\n\n    console.log(\"current display: \", currentDisplay);\n\n    for (var i = 0; i < videoParameters.length; i++) {\n      if (videoParameters[i].id === currentActivity) {\n        setDisplay(videoParameters[i]);\n        base = videoParameters[i];\n      }\n    }\n\n    for (var i = 0; i < videoParameters.length; i++) {\n      console.log(\"here\");\n      const temp_activity = videoParameters[i];\n\n      if (temp_activity.numPeople === \"\" || temp_activity.numVideo === \"\" || temp_activity.fromMin === \"\" || temp_activity.toMin === \"\" || temp_activity.resolution === \"\") {\n        temp.push({\n          id: temp_activity.id,\n          numPeople: base.numPeople,\n          numVideo: base.numVideo,\n          fromMin: base.fromMin,\n          toMin: base.toMin,\n          resolution: base.resolution\n        });\n      } else {\n        temp.push({\n          id: temp_activity.id,\n          numPeople: temp_activity.numPeople,\n          numVideo: temp_activity.numVideo,\n          fromMin: temp_activity.fromMin,\n          toMin: temp_activity.toMin,\n          resolution: temp_activity.resolution\n        });\n      }\n    }\n\n    setVideoParameters(temp);\n    setAllVideosCompleted(true);\n    setCheckPopUp(false);\n    setHasVideoParameters(true);\n    console.log(\"ACPs:\", temp);\n    setSwitch(true);\n  };\n  /***---------------------End of Video Parameter Page Handlers------------------***/\n\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(HomePage, {\n    hasActivities: hasActivities,\n    suggested: suggested,\n    tags: tags,\n    addActivityHandler: addActivityHandler,\n    deleteActivityHandler: deleteActivityHandler,\n    addFromSelected: () => addFromSelected,\n    routeToActivityParameters: routeToActivityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/activity-parameters\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ActivityParameterPage, {\n    activities: activities,\n    activityParameters: activityParameters,\n    currentActivity: currentActivity,\n    switched: switched,\n    currentDisplay: currentDisplay,\n    hasActivityParameters: hasActivityParameters,\n    allActivitiesCompleted: allActivitiesCompleted,\n    checkPopUp: checkPopUp,\n    updateParametersHandler: updateActivityParametersHandler,\n    switchActivity: switchActivityParameters,\n    routeBackToHomePage: routeBackToHomePage,\n    routeToVideoParameterPage: routeToVideoParameterPage,\n    applyManually: applyManually,\n    applyAllActivityParameters: applyAllActivityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/video-parameters\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VideoParameterPage, {\n    activities: activities,\n    videoParameters: videoParameters,\n    currentActivity: currentActivity,\n    switched: switched,\n    currentDisplay: currentDisplay,\n    hasVideoParameters: hasVideoParameters,\n    allVideosCompleted: allVideosCompleted,\n    checkPopUp: checkPopUp,\n    updateVideoParametersHandler: updateVideoParametersHandler,\n    switchActivity: switchVideoParameters,\n    routeBackToActivityParameterPage: routeBackToActivityParameterPage,\n    routeToVideoSelectionPage: routeToVideoSelectionPage,\n    applyManually: applyManually,\n    applyAllVideoParameters: applyAllVideoParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/video-selection\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VideoSelectionPage, {\n    activities: activities,\n    currentActivity: currentActivity,\n    switched: switched,\n    currentDisplay: currentDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 27\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/App.js"],"names":["React","useState","BrowserRouter","Route","classes","HomePage","ActivityParameterPage","VideoParameterPage","VideoSelectionPage","App","activities","setActivities","hasActivities","setHasActivites","currentActivity","setCurrentActivity","currentPath","setCurrentPath","tags","setTags","suggested","id","name","activityParameters","setActivityParameters","switched","setSwitch","currentDisplay","setDisplay","hasActivityParameters","setHasActivityParameters","allActivitiesCompleted","setAllActivitiesCompleted","checkPopUp","setCheckPopUp","videoParameters","setVideoParameters","hasVideoParameters","setHasVideoParameters","allVideosCompleted","setAllVideosCompleted","addFromSelected","event","target","toString","console","log","text","some","a","tempActivities","tempTags","push","addActivityHandler","tag","deleteActivityHandler","index","splice","length","routeToActivityParameters","temp","i","current","currentId","flag","tempActivity","j","fromFt","fromIn","toFt","toIn","fromBMI","toBMI","forFt","forIn","updateActivityParametersHandler","value","activity","temp_activity","switchActivityParameters","prev","routeBackToHomePage","routeToVideoParameterPage","numPeople","numVideo","fromMin","toMin","resolution","applyManually","applyAllActivityParameters","base","updateVideoParametersHandler","switchVideoParameters","routeBackToActivityParameterPage","routeToVideoSelectionPage","applyAllVideoParameters","app"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActivityParameterPage from \"./pages/ActivityParameterPage/ActivityParameterPage\";\nimport VideoParameterPage from \"./pages/VideoParametersPage/VideoParameterPage\";\nimport VideoSelectionPage from \"./pages/VideoSelectionPage/VideoSelectionPage\";\n\nconst App = () => {\n                    /* Global States */\n                    const [\n                      activities,\n                      setActivities,\n                    ] = useState([]);\n                    const [\n                      hasActivities,\n                      setHasActivites,\n                    ] = useState(false);\n                    const [\n                      currentActivity,\n                      setCurrentActivity,\n                    ] = useState(\"\");\n                    const [\n                      currentPath,\n                      setCurrentPath,\n                    ] = useState(\"/\");\n\n                    /* Homapage States */\n                    const [tags, setTags] = useState([]);\n                    const suggested = [\n                      { id: \"Singing\", name: \"Singing\" },\n                      { id: \"Dancing\", name: \"Dancing\" },\n                      { id: \"Kicking\", name: \"Kicking\" },\n                      { id: \"Typing\", name: \"Typing\" },\n                      { id: \"Running\", name: \"Running\" },\n                      { id: \"Lifting\", name: \"Lifting\" },\n                    ];\n\n                    /* Activity Parameter States */\n                    const [\n                      activityParameters,\n                      setActivityParameters,\n                    ] = useState([]);\n                    const [switched, setSwitch] = useState(\n                      false\n                    );\n                    const [\n                      currentDisplay,\n                      setDisplay,\n                    ] = useState({});\n                    const [\n                      hasActivityParameters,\n                      setHasActivityParameters,\n                    ] = useState(false);\n                    const [\n                      allActivitiesCompleted,\n                      setAllActivitiesCompleted,\n                    ] = useState(false);\n                    const [\n                      checkPopUp,\n                      setCheckPopUp,\n                    ] = useState(false);\n\n                    /* Video Parameter States */\n                    const [\n                      videoParameters,\n                      setVideoParameters,\n                    ] = useState([]);\n                    const [\n                      hasVideoParameters,\n                      setHasVideoParameters,\n                    ] = useState(false);\n                    const [\n                      allVideosCompleted,\n                      setAllVideosCompleted,\n                    ] = useState(false);\n\n                    /***----------------------------Homepage Handlers-----------------------------***/\n                    const addFromSelected = (event) => {\n                      const suggested = event.target.name.toString();\n                      console.log({\n                        id: suggested,\n                        text: suggested,\n                      });\n                      if (\n                        !activities.some(\n                          (a) =>\n                            a.id === suggested &&\n                            a.name === suggested\n                        )\n                      ) {\n                        const tempActivities = [\n                          ...activities,\n                        ];\n                        const tempTags = [...tags];\n                        tempTags.push({\n                          id: suggested,\n                          text: suggested,\n                        });\n                        tempActivities.push({\n                          id: suggested,\n                          name: suggested,\n                        });\n                        setHasActivites(true);\n                        setActivities(tempActivities);\n                        setTags(tempTags);\n                        console.log(\n                          \"activities:\",\n                          activities\n                        );\n                      }\n                    };\n\n                    const addActivityHandler = (tag) => {\n                      const tempTags = [...tags];\n                      tempTags.push(tag);\n                      console.log(tags);\n                      const tempActivities = [...activities];\n                      tempActivities.push({\n                        id: tag.id,\n                        name: tag.text,\n                      });\n\n                      setTags(tempTags);\n                      setActivities(tempActivities);\n                      setHasActivites(true);\n                    };\n\n                    const deleteActivityHandler = (index) => {\n                      const tempTags = [...tags];\n                      const tempActivities = [...activities];\n\n                      tempTags.splice(index, 1);\n                      tempActivities.splice(index, 1);\n\n                      console.log(tempTags);\n\n                      if (tempTags.length === 0) {\n                        setHasActivites(false);\n                      }\n\n                      setTags(tempTags);\n                      setActivities(tempActivities);\n                    };\n\n                    const routeToActivityParameters = (\n                      event\n                    ) => {\n                      const temp = [];\n                      console.log(\n                        \"activity length: \",\n                        activities.length\n                      );\n\n                      for (\n                        var i = 0;\n                        i < activities.length;\n                        i++\n                      ) {\n                        let current = activities[i];\n                        let currentId = current.id;\n                        let flag = false;\n                        let tempActivity = {};\n                        for (\n                          var j = 0;\n                          j < activityParameters.length;\n                          j++\n                        ) {\n                          if (\n                            activityParameters[j].id ===\n                            currentId\n                          ) {\n                            flag = true;\n                            tempActivity =\n                              activityParameters[j];\n                            break;\n                          }\n                        }\n                        if (flag) {\n                          temp.push(tempActivity);\n                        } else {\n                          temp.push({\n                            id: currentId,\n                            fromFt: \"\",\n                            fromIn: \"\",\n                            toFt: \"\",\n                            toIn: \"\",\n                            fromBMI: \"\",\n                            toBMI: \"\",\n                          });\n                        }\n                      }\n\n                      console.log(\"temp: \", temp);\n                      setActivityParameters(temp);\n                      //console.log(\"actvitivy params\", activityParameters);\n                      setCurrentActivity(activities[0].id);\n                      setDisplay(temp[0]);\n\n                      if (\n                        temp[0].forFt !== \"\" &&\n                        temp[0].forIn !== \"\" &&\n                        temp[0].toFt !== \"\" &&\n                        temp[0].toIn !== \"\" &&\n                        temp[0].fromBMI !== \"\" &&\n                        temp[0].toBMI !== \"\"\n                      ) {\n                        setHasActivityParameters(true);\n                      } else {\n                        setHasActivityParameters(false);\n                      }\n\n                      setSwitch(true);\n                      setCurrentPath(\"/activity-parameters\");\n                    };\n                    /***-------------------------End of Homepage Handlers-----------------------------***/\n\n                    /***-----------------------Activity Parameter Page Handlers-----------------------***/\n                    const updateActivityParametersHandler = (\n                      event\n                    ) => {\n                      setSwitch(false);\n                      console.log(switched);\n                      const name = event.target.name;\n                      let value = event.target.value;\n                      const temp = activityParameters;\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id ===\n                          currentActivity\n                        ) {\n                          if (name === \"fromFt\") {\n                            temp[i].fromFt = value;\n                          } else if (name === \"fromIn\") {\n                            temp[i].fromIn = value;\n                          } else if (name === \"toFt\") {\n                            temp[i].toFt = value;\n                          } else if (name === \"toIn\") {\n                            temp[i].toIn = value;\n                          } else if (name === \"fromBMI\") {\n                            temp[i].fromBMI = value;\n                          } else if (name === \"toBMI\") {\n                            temp[i].toBMI = value;\n                          }\n\n                          const activity = temp[i];\n                          if (\n                            activity.id === currentActivity\n                          ) {\n                            console.log(\n                              \"activity check: \",\n                              activity\n                            );\n                            if (\n                              activity.fromFt !== \"\" &&\n                              activity.fromIn !== \"\" &&\n                              activity.fromBMI !== \"\" &&\n                              activity.toBMI !== \"\" &&\n                              activity.toIn !== \"\" &&\n                              activity.toFt !== \"\"\n                            ) {\n                              setHasActivityParameters(true);\n                              break;\n                            } else {\n                              setHasActivityParameters(false);\n                            }\n                          }\n                        }\n                      }\n\n                      let flag = true;\n                      for (var j = 0; j < temp.length; j++) {\n                        const temp_activity = temp[j];\n                        if (\n                          temp_activity.fromFt === \"\" ||\n                          temp_activity.fromIn === \"\" ||\n                          temp_activity.fromBMI === \"\" ||\n                          temp_activity.toBMI === \"\" ||\n                          temp_activity.toIn === \"\" ||\n                          temp_activity.toFt === \"\"\n                        ) {\n                          setAllActivitiesCompleted(false);\n                          flag = false;\n                          break;\n                        }\n                        //console.log(activityParameters);\n                        console.log(\n                          \"all completed?\",\n                          allActivitiesCompleted\n                        );\n                      }\n                      if (flag) {\n                        setAllActivitiesCompleted(true);\n                      }\n                      setActivityParameters(temp);\n                    };\n\n                    const switchActivityParameters = (\n                      event\n                    ) => {\n                      const name = event.target.name;\n                      const prev = currentActivity;\n                      if (name !== prev) {\n                        setSwitch(true);\n                        setHasActivityParameters(false);\n                        console.log(\"switched!!\");\n                        //console.log(currentPath);\n                      }\n                      setCurrentActivity(name);\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id === name\n                        ) {\n                          //console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n                          setDisplay(activityParameters[i]);\n                          console.log(activityParameters[i]);\n                          if (switched) {\n                            if (\n                              activityParameters[i].fromFt !==\n                                \"\" &&\n                              activityParameters[i].fromIn !==\n                                \"\" &&\n                              activityParameters[i]\n                                .fromBMI !== \"\" &&\n                              activityParameters[i].toBMI !==\n                                \"\" &&\n                              activityParameters[i].toIn !==\n                                \"\" &&\n                              activityParameters[i].toFt !==\n                                \"\"\n                            ) {\n                              setHasActivityParameters(true);\n                            }\n                          }\n                          console.log(\n                            \"Display fromFt: \",\n                            activityParameters[i].fromFt\n                          );\n                          break;\n                        }\n                      }\n                      console.log(\"switched\", switched);\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id === name\n                        ) {\n                          const activity =\n                            activityParameters[i];\n                          if (activity.id === name) {\n                            console.log(\n                              \"activity check: \",\n                              activity\n                            );\n                            if (\n                              activity.fromFt !== \"\" &&\n                              activity.fromIn !== \"\" &&\n                              activity.fromBMI !== \"\" &&\n                              activity.toBMI !== \"\" &&\n                              activity.toIn !== \"\" &&\n                              activity.toFt !== \"\"\n                            ) {\n                              setHasActivityParameters(true);\n                            }\n                            break;\n                          }\n                        }\n                      }\n                    };\n\n                    const routeBackToHomePage = (event) => {\n                      setCurrentPath(\"/\");\n                      setCurrentActivity(\"\");\n                    };\n\n                    const routeToVideoParameterPage = (\n                      event\n                    ) => {\n                      if (allActivitiesCompleted) {\n                        setCheckPopUp(false);\n                        const temp = [];\n                        for (\n                          var i = 0;\n                          i < activities.length;\n                          i++\n                        ) {\n                          let current = activities[i];\n                          let currentId = current.id;\n                          let flag = false;\n                          let tempActivity = {};\n                          for (\n                            var j = 0;\n                            j < videoParameters.length;\n                            j++\n                          ) {\n                            if (\n                              videoParameters[j].id ===\n                              currentId\n                            ) {\n                              flag = true;\n                              tempActivity =\n                                videoParameters[j];\n                              break;\n                            }\n                          }\n                          if (flag) {\n                            temp.push(tempActivity);\n                          } else {\n                            temp.push({\n                              id: currentId,\n                              numPeople: \"\",\n                              numVideo: \"\",\n                              fromMin: \"\",\n                              toMin: \"\",\n                              resolution: \"\",\n                            });\n                          }\n                        }\n                        setVideoParameters(temp);\n                        console.log(\n                          \"video params\",\n                          videoParameters\n                        );\n                        setCurrentActivity(activities[0].id);\n                        setDisplay(temp[0]);\n                        setSwitch(true);\n                      } else {\n                        setCheckPopUp(true);\n                      }\n                    };\n\n                    const applyManually = (event) => {\n                      setCheckPopUp(false);\n                    };\n\n                    const applyAllActivityParameters = (\n                      event\n                    ) => {\n                      var temp = [];\n                      var base = null;\n\n                      //console.log(\"ACPs:\", activityParameters);\n\n                      console.log(\n                        \"current display: \",\n                        currentDisplay\n                      );\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id ===\n                          currentActivity\n                        ) {\n                          setDisplay(activityParameters[i]);\n                          base = activityParameters[i];\n                        }\n                      }\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        const temp_activity =\n                          activityParameters[i];\n                        if (\n                          temp_activity.fromFt === \"\" ||\n                          temp_activity.fromIn === \"\" ||\n                          temp_activity.fromBMI === \"\" ||\n                          temp_activity.toBMI === \"\" ||\n                          temp_activity.toIn === \"\" ||\n                          temp_activity.toFt === \"\"\n                        ) {\n                          temp.push({\n                            id: temp_activity.id,\n                            fromFt: base.fromFt,\n                            fromIn: base.fromIn,\n                            fromBMI: base.fromBMI,\n                            toBMI: base.toBMI,\n                            toIn: base.toIn,\n                            toFt: base.toFt,\n                          });\n                        } else {\n                          temp.push({\n                            id: temp_activity.id,\n                            fromFt: temp_activity.fromFt,\n                            fromIn: temp_activity.fromIn,\n                            fromBMI: temp_activity.fromBMI,\n                            toBMI: temp_activity.toBMI,\n                            toIn: temp_activity.toIn,\n                            toFt: temp_activity.toFt,\n                          });\n                        }\n                      }\n                      setActivityParameters(temp);\n                      setAllActivitiesCompleted(true);\n                      setCheckPopUp(false);\n                      setHasActivityParameters(true);\n                      console.log(\"ACPs:\", temp);\n                      setSwitch(true);\n                    };\n\n                    /***--------------------End of Activity Parameter Page Handlers----------------***/\n\n                    /***-----------------------Video Parameter Page Handlers-----------------------***/\n\n                    const updateVideoParametersHandler = (\n                      event\n                    ) => {\n                      setSwitch(false);\n                      console.log(switched);\n                      const name = event.target.name;\n                      let value = event.target.value;\n                      const temp = videoParameters;\n\n                      for (\n                        var i = 0;\n                        i < videoParameters.length;\n                        i++\n                      ) {\n                        if (\n                          videoParameters[i].id ===\n                          currentActivity\n                        ) {\n                          if (name === \"numPeople\") {\n                            temp[i].numPeople = value;\n                          } else if (name === \"numVideo\") {\n                            temp[i].numVideo = value;\n                          } else if (name === \"fromMin\") {\n                            temp[i].fromMin = value;\n                          } else if (name === \"toMin\") {\n                            temp[i].toMin = value;\n                          } else if (name === \"resolution\") {\n                            temp[i].resolution = value;\n                          }\n\n                          const activity = temp[i];\n                          if (\n                            activity.id === currentActivity\n                          ) {\n                            if (\n                              activity.numPeople !== \"\" &&\n                              activity.numVideo !== \"\" &&\n                              activity.fromMin !== \"\" &&\n                              activity.toMin !== \"\" &&\n                              activity.resolution !== \"\"\n                            ) {\n                              setHasVideoParameters(true);\n                              break;\n                            } else {\n                              setHasVideoParameters(false);\n                            }\n                          }\n                          //setDisplay(temp[i]);\n                          //break;\n                        }\n                      }\n\n                      let flag = true;\n                      for (var j = 0; j < temp.length; j++) {\n                        const temp_activity = temp[j];\n                        if (\n                          temp_activity.numPeople === \"\" ||\n                          temp_activity.numVideo === \"\" ||\n                          temp_activity.fromMin === \"\" ||\n                          temp_activity.toMin === \"\" ||\n                          temp_activity.resolution === \"\"\n                        ) {\n                          setAllVideosCompleted(false);\n                          flag = false;\n                          break;\n                        }\n                      }\n\n                      if (flag) {\n                        setAllVideosCompleted(true);\n                      }\n\n                      setVideoParameters(temp);\n                      //console.log(\"video parameters: \", videoParameters);\n                    };\n\n                    const switchVideoParameters = (event) => {\n                      const name = event.target.name;\n                      const prev = currentActivity;\n                      if (name !== prev) {\n                        setSwitch(true);\n                        setHasVideoParameters(false);\n                        console.log(\"switched!!\");\n                        //console.log(currentPath);\n                      }\n                      setCurrentActivity(name);\n\n                      for (\n                        var i = 0;\n                        i < videoParameters.length;\n                        i++\n                      ) {\n                        if (videoParameters[i].id === name) {\n                          setDisplay(videoParameters[i]);\n                          if (switched) {\n                            if (\n                              videoParameters[i].numPeople !==\n                                \"\" &&\n                              videoParameters[i].numVideo !==\n                                \"\" &&\n                              videoParameters[i].fromMin !==\n                                \"\" &&\n                              videoParameters[i].toMin !==\n                                \"\" &&\n                              videoParameters[i]\n                                .resolution !== \"\"\n                            ) {\n                              setHasVideoParameters(true);\n                            }\n                          }\n                          break;\n                        }\n                      }\n\n                      for (\n                        var i = 0;\n                        i < videoParameters.length;\n                        i++\n                      ) {\n                        if (videoParameters[i].id === name) {\n                          const activity = videoParameters[i];\n                          if (activity.id === name) {\n                            if (\n                              activity.numPeople !== \"\" &&\n                              activity.numVideo !== \"\" &&\n                              activity.fromMin !== \"\" &&\n                              activity.toMin !== \"\" &&\n                              activity.resolution !== \"\"\n                            ) {\n                              setHasVideoParameters(true);\n                            }\n                            break;\n                          }\n                        }\n                      }\n                    };\n\n                    const routeBackToActivityParameterPage = (\n                      event\n                    ) => {\n                      setCurrentPath(\"/activity-parameters\");\n                      setCurrentActivity(\n                        activityParameters[0].id\n                      );\n                      setDisplay(activityParameters[0]);\n                      setHasVideoParameters(true);\n                    };\n\n                    const routeToVideoSelectionPage = (\n                      event\n                    ) => {\n                      if (allVideosCompleted) {\n                        setCheckPopUp(false);\n                        const temp = [];\n                        for (\n                          var i = 0;\n                          i < activities.length;\n                          i++\n                        ) {\n                          let current = activities[i];\n                          let currentId = current.id;\n                          let flag = false;\n                          let tempActivity = {};\n                          for (\n                            var j = 0;\n                            j < videoParameters.length;\n                            j++\n                          ) {\n                            if (\n                              videoParameters[j].id ===\n                              currentId\n                            ) {\n                              flag = true;\n                              tempActivity =\n                                videoParameters[j];\n                              break;\n                            }\n                          }\n                          if (flag) {\n                            temp.push(tempActivity);\n                          } else {\n                            temp.push({\n                              id: currentId,\n                              numPeople: \"\",\n                              numVideo: \"\",\n                              fromMin: \"\",\n                              toMin: \"\",\n                              resolution: \"\",\n                            });\n                          }\n                        }\n                        console.log(\"temp: \", temp);\n                        setVideoParameters(temp);\n                        console.log(\n                          \"video params\",\n                          videoParameters\n                        );\n                        setCurrentActivity(activities[0].id);\n                        setDisplay(temp[0]);\n                        setSwitch(true);\n                      } else {\n                        setCheckPopUp(true);\n                      }\n                    };\n\n                    const applyAllVideoParameters = (\n                      event\n                    ) => {\n                      var temp = [];\n                      var base = null;\n\n                      //console.log(\"ACPs:\", videoParameters);\n\n                      console.log(\n                        \"current display: \",\n                        currentDisplay\n                      );\n                      for (\n                        var i = 0;\n                        i < videoParameters.length;\n                        i++\n                      ) {\n                        if (\n                          videoParameters[i].id ===\n                          currentActivity\n                        ) {\n                          setDisplay(videoParameters[i]);\n                          base = videoParameters[i];\n                        }\n                      }\n\n                      for (\n                        var i = 0;\n                        i < videoParameters.length;\n                        i++\n                      ) {\n                        console.log(\"here\");\n                        const temp_activity =\n                          videoParameters[i];\n                        if (\n                          temp_activity.numPeople === \"\" ||\n                          temp_activity.numVideo === \"\" ||\n                          temp_activity.fromMin === \"\" ||\n                          temp_activity.toMin === \"\" ||\n                          temp_activity.resolution === \"\"\n                        ) {\n                          temp.push({\n                            id: temp_activity.id,\n                            numPeople: base.numPeople,\n                            numVideo: base.numVideo,\n                            fromMin: base.fromMin,\n                            toMin: base.toMin,\n                            resolution: base.resolution,\n                          });\n                        } else {\n                          temp.push({\n                            id: temp_activity.id,\n                            numPeople:\n                              temp_activity.numPeople,\n                            numVideo: temp_activity.numVideo,\n                            fromMin: temp_activity.fromMin,\n                            toMin: temp_activity.toMin,\n                            resolution:\n                              temp_activity.resolution,\n                          });\n                        }\n                      }\n                      setVideoParameters(temp);\n                      setAllVideosCompleted(true);\n                      setCheckPopUp(false);\n                      setHasVideoParameters(true);\n                      console.log(\"ACPs:\", temp);\n                      setSwitch(true);\n                    };\n\n                    /***---------------------End of Video Parameter Page Handlers------------------***/\n\n                    return (\n                      <BrowserRouter className={classes.app}>\n                        <Route path={\"/\"} exact>\n                          <HomePage\n                            hasActivities={hasActivities}\n                            suggested={suggested}\n                            tags={tags}\n                            addActivityHandler={\n                              addActivityHandler\n                            }\n                            deleteActivityHandler={\n                              deleteActivityHandler\n                            }\n                            addFromSelected={() =>\n                              addFromSelected\n                            }\n                            routeToActivityParameters={\n                              routeToActivityParameters\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={\"/activity-parameters\"}\n                          exact\n                        >\n                          <ActivityParameterPage\n                            activities={activities}\n                            activityParameters={\n                              activityParameters\n                            }\n                            currentActivity={currentActivity}\n                            switched={switched}\n                            currentDisplay={currentDisplay}\n                            hasActivityParameters={\n                              hasActivityParameters\n                            }\n                            allActivitiesCompleted={\n                              allActivitiesCompleted\n                            }\n                            checkPopUp={checkPopUp}\n                            updateParametersHandler={\n                              updateActivityParametersHandler\n                            }\n                            switchActivity={\n                              switchActivityParameters\n                            }\n                            routeBackToHomePage={\n                              routeBackToHomePage\n                            }\n                            routeToVideoParameterPage={\n                              routeToVideoParameterPage\n                            }\n                            applyManually={applyManually}\n                            applyAllActivityParameters={\n                              applyAllActivityParameters\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={\"/video-parameters\"}\n                          exact\n                        >\n                          <VideoParameterPage\n                            activities={activities}\n                            videoParameters={videoParameters}\n                            currentActivity={currentActivity}\n                            switched={switched}\n                            currentDisplay={currentDisplay}\n                            hasVideoParameters={\n                              hasVideoParameters\n                            }\n                            allVideosCompleted={\n                              allVideosCompleted\n                            }\n                            checkPopUp={checkPopUp}\n                            updateVideoParametersHandler={\n                              updateVideoParametersHandler\n                            }\n                            switchActivity={\n                              switchVideoParameters\n                            }\n                            routeBackToActivityParameterPage={\n                              routeBackToActivityParameterPage\n                            }\n                            routeToVideoSelectionPage={\n                              routeToVideoSelectionPage\n                            }\n                            applyManually={applyManually}\n                            applyAllVideoParameters={\n                              applyAllVideoParameters\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={\"/video-selection\"}\n                          exact\n                        >\n                          <VideoSelectionPage\n                            activities={activities}\n                            currentActivity={currentActivity}\n                            switched={switched}\n                            currentDisplay={currentDisplay}\n                          />\n                        </Route>\n                      </BrowserRouter>\n                    );\n                  };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}