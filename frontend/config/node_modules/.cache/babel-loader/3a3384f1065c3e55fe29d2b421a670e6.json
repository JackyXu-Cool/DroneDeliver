{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActivityParameterPage from \"./pages/ActivityParameterPage/ActivityParameterPage\";\nimport VideoParameterPage from \"./pages/VideoParametersPage/VideoParameterPage\";\n\nconst App = () => {\n  /* Global States */\n  const [activities, setActivities] = useState([]);\n  const [hasActivities, setHasActivites] = useState(false);\n  const [currentActivity, setCurrentActivity] = useState(\"\");\n  const [currentPath, setCurrentPath] = useState(\"/\");\n  /* Homapage States */\n\n  const [tags, setTags] = useState([]);\n  const suggested = [{\n    id: \"Singing\",\n    name: \"Singing\"\n  }, {\n    id: \"Dancing\",\n    name: \"Dancing\"\n  }, {\n    id: \"Kicking\",\n    name: \"Kicking\"\n  }, {\n    id: \"Typing\",\n    name: \"Typing\"\n  }, {\n    id: \"Running\",\n    name: \"Running\"\n  }, {\n    id: \"Lifting\",\n    name: \"Lifting\"\n  }];\n  /* Activity Parameter States */\n\n  const [activityParameters, setActivityParameters] = useState([]);\n  const [switched, setSwitch] = useState(false);\n  const [currentDisplay, setDisplay] = useState({});\n  const [hasActivityParameters, setHasActivityParameters] = useState(false);\n  const [allActivitiesCompleted, setAllActivitiesCompleted] = useState(false);\n  const [checkPopUp, setCheckPopUp] = useState(false);\n  /* Video Parameter States */\n\n  const [videoParameters, setVideoParameters] = useState([]);\n  /***----------------------------Homepage Handlers-----------------------------***/\n\n  const addFromSelected = event => {\n    const suggested = event.target.name.toString();\n    console.log({\n      id: suggested,\n      text: suggested\n    });\n\n    if (!activities.some(a => a.id === suggested && a.name === suggested)) {\n      const tempActivities = [...activities];\n      const tempTags = [...tags];\n      tempTags.push({\n        id: suggested,\n        text: suggested\n      });\n      tempActivities.push({\n        id: suggested,\n        name: suggested\n      });\n      setHasActivites(true);\n      setActivities(tempActivities);\n      setTags(tempTags);\n      console.log(\"activities:\", activities);\n    }\n  };\n\n  const addActivityHandler = tag => {\n    const tempTags = [...tags];\n    tempTags.push(tag);\n    console.log(tags);\n    const tempActivities = [...activities];\n    tempActivities.push({\n      id: tag.id,\n      name: tag.text\n    });\n    setTags(tempTags);\n    setActivities(tempActivities);\n    setHasActivites(true);\n  };\n\n  const deleteActivityHandler = index => {\n    const tempTags = [...tags];\n    const tempActivities = [...activities];\n    tempTags.splice(index, 1);\n    tempActivities.splice(index, 1);\n    console.log(tempTags);\n\n    if (tempTags.length === 0) {\n      setHasActivites(false);\n    }\n\n    setTags(tempTags);\n    setActivities(tempActivities);\n  };\n\n  const routeToActivityParameters = event => {\n    const temp = [];\n    console.log(\"activity length: \", activities.length);\n\n    for (var i = 0; i < activities.length; i++) {\n      let current = activities[i];\n      let currentId = current.id;\n      let flag = false;\n      let tempActivity = {};\n\n      for (var j = 0; j < activityParameters.length; j++) {\n        if (activityParameters[j].id === currentId) {\n          flag = true;\n          tempActivity = activityParameters[j];\n          break;\n        }\n      }\n\n      if (flag) {\n        temp.push(tempActivity);\n      } else {\n        temp.push({\n          id: currentId,\n          fromFt: \"\",\n          fromIn: \"\",\n          toFt: \"\",\n          toIn: \"\",\n          fromBMI: \"\",\n          toBMI: \"\"\n        });\n      }\n    }\n\n    console.log(\"temp: \", temp);\n    setActivityParameters(temp); //console.log(\"actvitivy params\", activityParameters);\n\n    setCurrentActivity(activities[0].id);\n    setDisplay(temp[0]);\n\n    if (temp[0].forFt != \"\" && temp[0].forIn != \"\" && temp[0].toFt != \"\" && temp[0].toIn != \"\" && temp[0].fromBMI != \"\" && temp[0].toBMI != \"\") {\n      setHasActivityParameters(true);\n    } else {\n      setHasActivityParameters(false);\n    }\n\n    setSwitch(true);\n    setCurrentPath(\"/activity-parameters\");\n  };\n  /***-------------------------End of Homepage Handlers-----------------------------***/\n\n  /***-----------------------Activity Parameter Page Handlers-----------------------***/\n\n\n  const updateParametersHandler = event => {\n    setSwitch(false);\n    console.log(switched);\n    const name = event.target.name;\n    let value = event.target.value;\n    const temp = activityParameters;\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === currentActivity) {\n        if (name === \"fromFt\") {\n          temp[i].fromFt = value;\n        } else if (name === \"fromIn\") {\n          temp[i].fromIn = value;\n        } else if (name === \"toFt\") {\n          temp[i].toFt = value;\n        } else if (name === \"toIn\") {\n          temp[i].toIn = value;\n        } else if (name === \"fromBMI\") {\n          temp[i].fromBMI = value;\n        } else if (name === \"toBMI\") {\n          temp[i].toBMI = value;\n        }\n\n        const activity = temp[i];\n\n        if (activity.id === currentActivity) {\n          console.log(\"activity check: \", activity);\n\n          if (activity.fromFt !== \"\" && activity.fromIn !== \"\" && activity.fromBMI !== \"\" && activity.toBMI !== \"\" && activity.toIn !== \"\" && activity.toFt !== \"\") {\n            setHasActivityParameters(true);\n            break;\n          } else {\n            setHasActivityParameters(false);\n          }\n        }\n      }\n    }\n\n    let flag = true;\n\n    for (var j = 0; j < temp.length; j++) {\n      const temp_activity = temp[j];\n\n      if (temp_activity.fromFt === \"\" || temp_activity.fromIn === \"\" || temp_activity.fromBMI === \"\" || temp_activity.toBMI === \"\" || temp_activity.toIn === \"\" || temp_activity.toFt === \"\") {\n        setAllActivitiesCompleted(false);\n        flag = false;\n        break;\n      } //console.log(activityParameters);\n\n\n      console.log(\"all completed?\", allActivitiesCompleted);\n    }\n\n    if (flag) {\n      setAllActivitiesCompleted(true);\n    }\n\n    setActivityParameters(temp);\n  };\n\n  const switchActivity = event => {\n    const name = event.target.name;\n    const prev = currentActivity;\n\n    if (name !== prev) {\n      setSwitch(true);\n      setHasActivityParameters(false);\n    }\n\n    setCurrentActivity(name);\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === name) {\n        //console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n        setDisplay(activityParameters[i]);\n        console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n        break;\n      }\n    }\n\n    console.log(\"switched\", switched);\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      if (activityParameters[i].id === name) {\n        const activity = activityParameters[i];\n\n        if (activity.id === name) {\n          console.log(\"activity check: \", activity);\n\n          if (activity.fromFt !== \"\" && activity.fromIn !== \"\" && activity.fromBMI !== \"\" && activity.toBMI !== \"\" && activity.toIn !== \"\" && activity.toFt !== \"\") {\n            setHasActivityParameters(true);\n          }\n\n          break;\n        }\n      }\n    }\n  };\n\n  const routeBackToHomePage = event => {\n    setCurrentPath(\"/\");\n    setCurrentActivity(\"\");\n  };\n\n  const routeToVideoParameterPage = event => {\n    if (allActivitiesCompleted) {\n      setCheckPopUp(false);\n    } else {\n      setCheckPopUp(true);\n    }\n  };\n\n  const applyManually = event => {\n    setCheckPopUp(false);\n  };\n\n  const applyAllActivityParameters = event => {\n    var temp = []; //console.log(\"ACPs:\", activityParameters);\n\n    for (var i = 0; i < activityParameters.length; i++) {\n      const temp_activity = activityParameters[i];\n\n      if (temp_activity.fromFt === \"\" || temp_activity.fromIn === \"\" || temp_activity.fromBMI === \"\" || temp_activity.toBMI === \"\" || temp_activity.toIn === \"\" || temp_activity.toFt === \"\") {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: currentDisplay.fromFt,\n          fromIn: currentDisplay.fromIn,\n          fromBMI: currentDisplay.fromBMI,\n          toBMI: currentDisplay.toBMI,\n          toIn: currentDisplay.toIn,\n          toFt: currentDisplay.toFt\n        });\n      } else {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: temp_activity.fromFt,\n          fromIn: temp_activity.fromIn,\n          fromBMI: temp_activity.fromBMI,\n          toBMI: temp_activity.toBMI,\n          toIn: temp_activity.toIn,\n          toFt: temp_activity.toFt\n        });\n      }\n    }\n\n    setActivityParameters(temp);\n    setAllActivitiesCompleted(true);\n    setCheckPopUp(false);\n    setHasActivityParameters(true);\n    console.log(\"ACPs:\", activityParameters);\n  };\n  /***--------------------End of Activity Parameter Page Handlers----------------***/\n\n  /***-----------------------Video Parameter Page Handlers-----------------------***/\n\n\n  const routeBackToActivityParameterPage = event => {\n    setCurrentPath(\"/activity-parameters\");\n    setCurrentActivity(activityParameters[0].id);\n    setDisplay(activityParameters[0]);\n  };\n  /***---------------------End of Video Parameter Page Handlers------------------***/\n\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(HomePage, {\n    hasActivities: hasActivities,\n    suggested: suggested,\n    tags: tags,\n    addActivityHandler: addActivityHandler,\n    deleteActivityHandler: deleteActivityHandler,\n    addFromSelected: () => addFromSelected,\n    routeToActivityParameters: routeToActivityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/activity-parameters\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ActivityParameterPage, {\n    activities: activities,\n    activityParameters: activityParameters,\n    currentActivity: currentActivity,\n    switched: switched,\n    currentDisplay: currentDisplay,\n    hasActivityParameters: hasActivityParameters,\n    allActivitiesCompleted: allActivitiesCompleted,\n    checkPopUp: checkPopUp,\n    updateParametersHandler: updateParametersHandler,\n    switchActivity: switchActivity,\n    routeBackToHomePage: routeBackToHomePage,\n    routeToVideoParameterPage: routeToVideoParameterPage,\n    applyManually: applyManually,\n    applyAllActivityParameters: applyAllActivityParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/video-parameters\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VideoParameterPage, {\n    activities: activities,\n    routeBackToActivityParameterPage: routeBackToActivityParameterPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 27\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Route","classes","HomePage","ActivityParameterPage","VideoParameterPage","App","activities","setActivities","hasActivities","setHasActivites","currentActivity","setCurrentActivity","currentPath","setCurrentPath","tags","setTags","suggested","id","name","activityParameters","setActivityParameters","switched","setSwitch","currentDisplay","setDisplay","hasActivityParameters","setHasActivityParameters","allActivitiesCompleted","setAllActivitiesCompleted","checkPopUp","setCheckPopUp","videoParameters","setVideoParameters","addFromSelected","event","target","toString","console","log","text","some","a","tempActivities","tempTags","push","addActivityHandler","tag","deleteActivityHandler","index","splice","length","routeToActivityParameters","temp","i","current","currentId","flag","tempActivity","j","fromFt","fromIn","toFt","toIn","fromBMI","toBMI","forFt","forIn","updateParametersHandler","value","activity","temp_activity","switchActivity","prev","routeBackToHomePage","routeToVideoParameterPage","applyManually","applyAllActivityParameters","routeBackToActivityParameterPage","app"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActivityParameterPage from \"./pages/ActivityParameterPage/ActivityParameterPage\";\nimport VideoParameterPage from \"./pages/VideoParametersPage/VideoParameterPage\";\n\nconst App = () => {\n                    /* Global States */\n                    const [\n                      activities,\n                      setActivities,\n                    ] = useState([]);\n                    const [\n                      hasActivities,\n                      setHasActivites,\n                    ] = useState(false);\n                    const [\n                      currentActivity,\n                      setCurrentActivity,\n                    ] = useState(\"\");\n                    const [\n                      currentPath,\n                      setCurrentPath,\n                    ] = useState(\"/\");\n\n                    /* Homapage States */\n                    const [tags, setTags] = useState([]);\n                    const suggested = [\n                      { id: \"Singing\", name: \"Singing\" },\n                      { id: \"Dancing\", name: \"Dancing\" },\n                      { id: \"Kicking\", name: \"Kicking\" },\n                      { id: \"Typing\", name: \"Typing\" },\n                      { id: \"Running\", name: \"Running\" },\n                      { id: \"Lifting\", name: \"Lifting\" },\n                    ];\n\n                    /* Activity Parameter States */\n                    const [\n                      activityParameters,\n                      setActivityParameters,\n                    ] = useState([]);\n                    const [switched, setSwitch] = useState(\n                      false\n                    );\n                    const [\n                      currentDisplay,\n                      setDisplay,\n                    ] = useState({});\n                    const [\n                      hasActivityParameters,\n                      setHasActivityParameters,\n                    ] = useState(false);\n                    const [\n                      allActivitiesCompleted,\n                      setAllActivitiesCompleted,\n                    ] = useState(false);\n                    const [\n                      checkPopUp,\n                      setCheckPopUp,\n                    ] = useState(false);\n\n                    /* Video Parameter States */\n                    const [\n                      videoParameters,\n                      setVideoParameters,\n                    ] = useState([]);\n\n                    /***----------------------------Homepage Handlers-----------------------------***/\n                    const addFromSelected = (event) => {\n                      const suggested = event.target.name.toString();\n                      console.log({\n                        id: suggested,\n                        text: suggested,\n                      });\n                      if (\n                        !activities.some(\n                          (a) =>\n                            a.id === suggested &&\n                            a.name === suggested\n                        )\n                      ) {\n                        const tempActivities = [\n                          ...activities,\n                        ];\n                        const tempTags = [...tags];\n                        tempTags.push({\n                          id: suggested,\n                          text: suggested,\n                        });\n                        tempActivities.push({\n                          id: suggested,\n                          name: suggested,\n                        });\n                        setHasActivites(true);\n                        setActivities(tempActivities);\n                        setTags(tempTags);\n                        console.log(\n                          \"activities:\",\n                          activities\n                        );\n                      }\n                    };\n\n                    const addActivityHandler = (tag) => {\n                      const tempTags = [...tags];\n                      tempTags.push(tag);\n                      console.log(tags);\n                      const tempActivities = [...activities];\n                      tempActivities.push({\n                        id: tag.id,\n                        name: tag.text,\n                      });\n\n                      setTags(tempTags);\n                      setActivities(tempActivities);\n                      setHasActivites(true);\n                    };\n\n                    const deleteActivityHandler = (index) => {\n                      const tempTags = [...tags];\n                      const tempActivities = [...activities];\n\n                      tempTags.splice(index, 1);\n                      tempActivities.splice(index, 1);\n\n                      console.log(tempTags);\n\n                      if (tempTags.length === 0) {\n                        setHasActivites(false);\n                      }\n\n                      setTags(tempTags);\n                      setActivities(tempActivities);\n                    };\n\n                    const routeToActivityParameters = (\n                      event\n                    ) => {\n                      const temp = [];\n                      console.log(\n                        \"activity length: \",\n                        activities.length\n                      );\n\n                      for (\n                        var i = 0;\n                        i < activities.length;\n                        i++\n                      ) {\n                        let current = activities[i];\n                        let currentId = current.id;\n                        let flag = false;\n                        let tempActivity = {};\n                        for (\n                          var j = 0;\n                          j < activityParameters.length;\n                          j++\n                        ) {\n                          if (\n                            activityParameters[j].id ===\n                            currentId\n                          ) {\n                            flag = true;\n                            tempActivity =\n                              activityParameters[j];\n                            break;\n                          }\n                        }\n                        if (flag) {\n                          temp.push(tempActivity);\n                        } else {\n                          temp.push({\n                            id: currentId,\n                            fromFt: \"\",\n                            fromIn: \"\",\n                            toFt: \"\",\n                            toIn: \"\",\n                            fromBMI: \"\",\n                            toBMI: \"\",\n                          });\n                        }\n                      }\n\n                      console.log(\"temp: \", temp);\n                      setActivityParameters(temp);\n                      //console.log(\"actvitivy params\", activityParameters);\n                      setCurrentActivity(activities[0].id);\n                      setDisplay(temp[0]);\n\n                      if (\n                        temp[0].forFt != \"\" &&\n                        temp[0].forIn != \"\" &&\n                        temp[0].toFt != \"\" &&\n                        temp[0].toIn != \"\" &&\n                        temp[0].fromBMI != \"\" &&\n                        temp[0].toBMI != \"\"\n                      ) {\n                        setHasActivityParameters(true);\n                      } else {\n                        setHasActivityParameters(false);\n                      }\n\n                      setSwitch(true);\n                      setCurrentPath(\"/activity-parameters\");\n                    };\n                    /***-------------------------End of Homepage Handlers-----------------------------***/\n\n                    /***-----------------------Activity Parameter Page Handlers-----------------------***/\n                    const updateParametersHandler = (\n                      event\n                    ) => {\n                      setSwitch(false);\n                      console.log(switched);\n                      const name = event.target.name;\n                      let value = event.target.value;\n                      const temp = activityParameters;\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id ===\n                          currentActivity\n                        ) {\n                          if (name === \"fromFt\") {\n                            temp[i].fromFt = value;\n                          } else if (name === \"fromIn\") {\n                            temp[i].fromIn = value;\n                          } else if (name === \"toFt\") {\n                            temp[i].toFt = value;\n                          } else if (name === \"toIn\") {\n                            temp[i].toIn = value;\n                          } else if (name === \"fromBMI\") {\n                            temp[i].fromBMI = value;\n                          } else if (name === \"toBMI\") {\n                            temp[i].toBMI = value;\n                          }\n\n                          const activity = temp[i];\n                          if (\n                            activity.id === currentActivity\n                          ) {\n                            console.log(\n                              \"activity check: \",\n                              activity\n                            );\n                            if (\n                              activity.fromFt !== \"\" &&\n                              activity.fromIn !== \"\" &&\n                              activity.fromBMI !== \"\" &&\n                              activity.toBMI !== \"\" &&\n                              activity.toIn !== \"\" &&\n                              activity.toFt !== \"\"\n                            ) {\n                              setHasActivityParameters(true);\n                              break;\n                            } else {\n                              setHasActivityParameters(false);\n                            }\n                          }\n                        }\n                      }\n\n                      let flag = true;\n                      for (var j = 0; j < temp.length; j++) {\n                        const temp_activity = temp[j];\n                        if (\n                          temp_activity.fromFt === \"\" ||\n                          temp_activity.fromIn === \"\" ||\n                          temp_activity.fromBMI === \"\" ||\n                          temp_activity.toBMI === \"\" ||\n                          temp_activity.toIn === \"\" ||\n                          temp_activity.toFt === \"\"\n                        ) {\n                          setAllActivitiesCompleted(false);\n                          flag = false;\n                          break;\n                        }\n                        //console.log(activityParameters);\n                        console.log(\n                          \"all completed?\",\n                          allActivitiesCompleted\n                        );\n                      }\n                      if (flag) {\n                        setAllActivitiesCompleted(true);\n                      }\n                      setActivityParameters(temp);\n                    };\n\n                    const switchActivity = (event) => {\n                      const name = event.target.name;\n                      const prev = currentActivity;\n                      if (name !== prev) {\n                        setSwitch(true);\n                        setHasActivityParameters(false);\n                      }\n                      setCurrentActivity(name);\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id === name\n                        ) {\n                          //console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n                          setDisplay(activityParameters[i]);\n                          console.log(\n                            \"Display fromFt: \",\n                            activityParameters[i].fromFt\n                          );\n                          break;\n                        }\n                      }\n                      console.log(\"switched\", switched);\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        if (\n                          activityParameters[i].id === name\n                        ) {\n                          const activity =\n                            activityParameters[i];\n                          if (activity.id === name) {\n                            console.log(\n                              \"activity check: \",\n                              activity\n                            );\n                            if (\n                              activity.fromFt !== \"\" &&\n                              activity.fromIn !== \"\" &&\n                              activity.fromBMI !== \"\" &&\n                              activity.toBMI !== \"\" &&\n                              activity.toIn !== \"\" &&\n                              activity.toFt !== \"\"\n                            ) {\n                              setHasActivityParameters(true);\n                            }\n                            break;\n                          }\n                        }\n                      }\n                    };\n\n                    const routeBackToHomePage = (event) => {\n                      setCurrentPath(\"/\");\n                      setCurrentActivity(\"\");\n                    };\n\n                    const routeToVideoParameterPage = (\n                      event\n                    ) => {\n                      if (allActivitiesCompleted) {\n                        setCheckPopUp(false);\n                      } else {\n                        setCheckPopUp(true);\n                      }\n                    };\n\n                    const applyManually = (event) => {\n                      setCheckPopUp(false);\n                    };\n\n                    const applyAllActivityParameters = (\n                      event\n                    ) => {\n                      var temp = [];\n\n                      //console.log(\"ACPs:\", activityParameters);\n\n                      for (\n                        var i = 0;\n                        i < activityParameters.length;\n                        i++\n                      ) {\n                        const temp_activity =\n                          activityParameters[i];\n                        if (\n                          temp_activity.fromFt === \"\" ||\n                          temp_activity.fromIn === \"\" ||\n                          temp_activity.fromBMI === \"\" ||\n                          temp_activity.toBMI === \"\" ||\n                          temp_activity.toIn === \"\" ||\n                          temp_activity.toFt === \"\"\n                        ) {\n                          temp.push({\n                            id: temp_activity.id,\n                            fromFt: currentDisplay.fromFt,\n                            fromIn: currentDisplay.fromIn,\n                            fromBMI: currentDisplay.fromBMI,\n                            toBMI: currentDisplay.toBMI,\n                            toIn: currentDisplay.toIn,\n                            toFt: currentDisplay.toFt,\n                          });\n                        } else {\n                          temp.push({\n                            id: temp_activity.id,\n                            fromFt: temp_activity.fromFt,\n                            fromIn: temp_activity.fromIn,\n                            fromBMI: temp_activity.fromBMI,\n                            toBMI: temp_activity.toBMI,\n                            toIn: temp_activity.toIn,\n                            toFt: temp_activity.toFt,\n                          });\n                        }\n                      }\n                      setActivityParameters(temp);\n                      setAllActivitiesCompleted(true);\n                      setCheckPopUp(false);\n                      setHasActivityParameters(true);\n                      console.log(\n                        \"ACPs:\",\n                        activityParameters\n                      );\n                    };\n\n                    /***--------------------End of Activity Parameter Page Handlers----------------***/\n\n                    /***-----------------------Video Parameter Page Handlers-----------------------***/\n                    \n \n                    const routeBackToActivityParameterPage = (\n                      event\n                    ) => {\n                      setCurrentPath(\"/activity-parameters\");\n                      setCurrentActivity(\n                        activityParameters[0].id\n                      );\n                      setDisplay(activityParameters[0]);\n                    };\n\n                    /***---------------------End of Video Parameter Page Handlers------------------***/\n\n                    return (\n                      <BrowserRouter className={classes.app}>\n                        <Route path={\"/\"} exact>\n                          <HomePage\n                            hasActivities={hasActivities}\n                            suggested={suggested}\n                            tags={tags}\n                            addActivityHandler={\n                              addActivityHandler\n                            }\n                            deleteActivityHandler={\n                              deleteActivityHandler\n                            }\n                            addFromSelected={() =>\n                              addFromSelected\n                            }\n                            routeToActivityParameters={\n                              routeToActivityParameters\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={\"/activity-parameters\"}\n                          exact\n                        >\n                          <ActivityParameterPage\n                            activities={activities}\n                            activityParameters={\n                              activityParameters\n                            }\n                            currentActivity={currentActivity}\n                            switched={switched}\n                            currentDisplay={currentDisplay}\n                            hasActivityParameters={\n                              hasActivityParameters\n                            }\n                            allActivitiesCompleted={\n                              allActivitiesCompleted\n                            }\n                            checkPopUp={checkPopUp}\n                            updateParametersHandler={\n                              updateParametersHandler\n                            }\n                            switchActivity={switchActivity}\n                            routeBackToHomePage={\n                              routeBackToHomePage\n                            }\n                            routeToVideoParameterPage={\n                              routeToVideoParameterPage\n                            }\n                            applyManually={applyManually}\n                            applyAllActivityParameters={\n                              applyAllActivityParameters\n                            }\n                          />\n                        </Route>\n                        <Route\n                          path={\"/video-parameters\"}\n                          exact\n                        >\n                          <VideoParameterPage\n                            activities={activities}\n                            routeBackToActivityParameterPage={\n                              routeBackToActivityParameterPage\n                            }\n                          />\n                        </Route>\n                      </BrowserRouter>\n                    );\n                  };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}