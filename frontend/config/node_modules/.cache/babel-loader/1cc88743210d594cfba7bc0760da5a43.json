{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/components/Skeleton/Skeleton.js\";\n\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\nimport * as THREE from \"three\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nconst Skeleton = props => {\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"../../../Xbot.glb\");\n  const {\n    actions\n  } = useAnimations(animations, group);\n  const [active, setActive] = useState(false);\n  return /*#__PURE__*/React.createElement(\"group\", Object.assign({\n    ref: group\n  }, props, {\n    dispose: null,\n    position: [0, -0.9, 0],\n    onClick: e => setActive(!active),\n    color: active ? \"hotpink\" : \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    scale: [0.01, 0.01, 0.01],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: nodes.mixamorigHips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"skinnedMesh\", {\n    material: materials.Beta_Joints_MAT,\n    geometry: nodes.Beta_Joints.geometry,\n    skeleton: nodes.Beta_Joints.skeleton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"skinnedMesh\", {\n    material: materials[\"asdf1:Beta_HighLimbsGeoSG2\"],\n    geometry: nodes.Beta_Surface.geometry,\n    skeleton: nodes.Beta_Surface.skeleton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Skeleton;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/components/Skeleton/Skeleton.js"],"names":["THREE","React","useRef","useState","useEffect","useFrame","useGLTF","useAnimations","Skeleton","props","group","nodes","materials","animations","actions","active","setActive","e","mixamorigHips","Beta_Joints_MAT","Beta_Joints","geometry","skeleton","Beta_Surface"],"mappings":";;AAAA;;;AAIA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,mBAAvC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,KAAK,GAAGR,MAAM,EAApB;AACA,QAAM;AAAES,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAmCP,OAAO,CAAC,mBAAD,CAAhD;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcP,aAAa,CAACM,UAAD,EAAaH,KAAb,CAAjC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACE;AACE,IAAA,GAAG,EAAEO;AADP,KAEMD,KAFN;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,GAAL,EAAU,CAAV,CAJZ;AAKE,IAAA,OAAO,EAAGQ,CAAD,IAAOD,SAAS,CAAC,CAACD,MAAF,CAL3B;AAME,IAAA,KAAK,EAAEA,MAAM,GAAG,SAAH,GAAe,QAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE;AAAO,IAAA,KAAK,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAW,IAAA,MAAM,EAAEJ,KAAK,CAACO,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,QAAQ,EAAEN,SAAS,CAACO,eADtB;AAEE,IAAA,QAAQ,EAAER,KAAK,CAACS,WAAN,CAAkBC,QAF9B;AAGE,IAAA,QAAQ,EAAEV,KAAK,CAACS,WAAN,CAAkBE,QAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AACE,IAAA,QAAQ,EAAEV,SAAS,CAAC,4BAAD,CADrB;AAEE,IAAA,QAAQ,EAAED,KAAK,CAACY,YAAN,CAAmBF,QAF/B;AAGE,IAAA,QAAQ,EAAEV,KAAK,CAACY,YAAN,CAAmBD,QAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CARF,CADF;AAwBD,CA9BD;;AAgCA,eAAed,QAAf","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport * as THREE from \"three\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useGLTF, useAnimations } from \"@react-three/drei\";\n\nconst Skeleton = (props) => {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"../../../Xbot.glb\");\n  const { actions } = useAnimations(animations, group);\n  const [active, setActive] = useState(false);\n\n  return (\n    <group\n      ref={group}\n      {...props}\n      dispose={null}\n      position={[0, -0.9, 0]}\n      onClick={(e) => setActive(!active)}\n      color={active ? \"hotpink\" : \"orange\"}\n    >\n      <group scale={[0.01, 0.01, 0.01]}>\n        <primitive object={nodes.mixamorigHips} />\n        <skinnedMesh\n          material={materials.Beta_Joints_MAT}\n          geometry={nodes.Beta_Joints.geometry}\n          skeleton={nodes.Beta_Joints.skeleton}\n        />\n        <skinnedMesh\n          material={materials[\"asdf1:Beta_HighLimbsGeoSG2\"]}\n          geometry={nodes.Beta_Surface.geometry}\n          skeleton={nodes.Beta_Surface.skeleton}\n        />\n      </group>\n    </group>\n  );\n};\n\nexport default Skeleton;\n"]},"metadata":{},"sourceType":"module"}