{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/components/Skeleton/Skeleton.js\";\nimport * as THREE from \"three\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useThree, useFrame } from \"react-three-fiber\";\nimport { useDrag } from \"react-use-gesture\";\nimport { useGLTF, useFBX, useAnimations } from \"@react-three/drei\";\nexport default function Skeleton(props) {\n  const group = useRef();\n  const {\n    nodes,\n    materials,\n    animations\n  } = useGLTF(\"../../../Xbot.glb\");\n  const fbx = useFBX(\"../../../xbot.fbx\").children[0];\n  console.log(\"glb: \", useGLTF(\"../../../Xbot.glb\"));\n  const ray = props.raycaster;\n  materials.Beta_Joints_MAT.color = {\n    b: 1,\n    g: 1,\n    r: 1\n  };\n  materials[\"asdf1:Beta_HighLimbsGeoSG2\"].color = {\n    b: 0.5,\n    g: 0.5,\n    r: 0.5\n  };\n  return (\n    /*#__PURE__*/\n    // <mesh ref={group} {...props} dispose={null} position={[0, -0.9, 0]}>\n    //   <mesh scale={[0.01, 0.01, 0.01]}>\n    //     <primitive object={nodes.mixamorigHips} />\n    //     <skinnedMesh\n    //       material={materials.Beta_Joints_MAT}\n    //       geometry={nodes.Beta_Joints.geometry}\n    //       skeleton={nodes.Beta_Joints.skeleton}\n    //     />\n    //     <skinnedMesh\n    //       material={materials[\"asdf1:Beta_HighLimbsGeoSG2\"]}\n    //       geometry={nodes.Beta_Surface.geometry}\n    //       skeleton={nodes.Beta_Surface.skeleton}\n    //     />\n    //     <mesh\n    //       material={fbx.material}\n    //       geometry={fbx.geometry}\n    //       onClick={(e) => {\n    //         console.log(\"here\");\n    //       }}\n    //     />\n    //   </mesh>\n    // </mesh>\n    React.createElement(\"mesh\", {\n      material: fbx.material,\n      geometry: fbx.geometry,\n      onClick: e => {\n        console.log(e.target);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    })\n  );\n} //useGLTF.preload(\"../../../Xbot.glb\");","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/components/Skeleton/Skeleton.js"],"names":["THREE","React","useRef","useState","useEffect","useThree","useFrame","useDrag","useGLTF","useFBX","useAnimations","Skeleton","props","group","nodes","materials","animations","fbx","children","console","log","ray","raycaster","Beta_Joints_MAT","color","b","g","r","material","geometry","e","target"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,aAA1B,QAA+C,mBAA/C;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,KAAK,GAAGX,MAAM,EAApB;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAmCR,OAAO,CAAC,mBAAD,CAAhD;AACA,QAAMS,GAAG,GAAGR,MAAM,CAAC,mBAAD,CAAN,CAA4BS,QAA5B,CAAqC,CAArC,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,OAAO,CAAC,mBAAD,CAA5B;AACA,QAAMa,GAAG,GAAGT,KAAK,CAACU,SAAlB;AAEAP,EAAAA,SAAS,CAACQ,eAAV,CAA0BC,KAA1B,GAAkC;AAChCC,IAAAA,CAAC,EAAE,CAD6B;AAEhCC,IAAAA,CAAC,EAAE,CAF6B;AAGhCC,IAAAA,CAAC,EAAE;AAH6B,GAAlC;AAMAZ,EAAAA,SAAS,CAAC,4BAAD,CAAT,CAAwCS,KAAxC,GAAgD;AAC9CC,IAAAA,CAAC,EAAE,GAD2C;AAE9CC,IAAAA,CAAC,EAAE,GAF2C;AAG9CC,IAAAA,CAAC,EAAE;AAH2C,GAAhD;AAMA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE,MAAA,QAAQ,EAAEV,GAAG,CAACW,QADhB;AAEE,MAAA,QAAQ,EAAEX,GAAG,CAACY,QAFhB;AAGE,MAAA,OAAO,EAAGC,CAAD,IAAO;AACdX,QAAAA,OAAO,CAACC,GAAR,CAAYU,CAAC,CAACC,MAAd;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBF;AAgCD,C,CAED","sourcesContent":["import * as THREE from \"three\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useThree, useFrame } from \"react-three-fiber\";\nimport { useDrag } from \"react-use-gesture\";\nimport { useGLTF, useFBX, useAnimations } from \"@react-three/drei\";\n\nexport default function Skeleton(props) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"../../../Xbot.glb\");\n  const fbx = useFBX(\"../../../xbot.fbx\").children[0];\n  console.log(\"glb: \", useGLTF(\"../../../Xbot.glb\"));\n  const ray = props.raycaster;\n\n  materials.Beta_Joints_MAT.color = {\n    b: 1,\n    g: 1,\n    r: 1,\n  };\n\n  materials[\"asdf1:Beta_HighLimbsGeoSG2\"].color = {\n    b: 0.5,\n    g: 0.5,\n    r: 0.5,\n  };\n\n  return (\n    // <mesh ref={group} {...props} dispose={null} position={[0, -0.9, 0]}>\n    //   <mesh scale={[0.01, 0.01, 0.01]}>\n    //     <primitive object={nodes.mixamorigHips} />\n    //     <skinnedMesh\n    //       material={materials.Beta_Joints_MAT}\n    //       geometry={nodes.Beta_Joints.geometry}\n    //       skeleton={nodes.Beta_Joints.skeleton}\n    //     />\n    //     <skinnedMesh\n    //       material={materials[\"asdf1:Beta_HighLimbsGeoSG2\"]}\n    //       geometry={nodes.Beta_Surface.geometry}\n    //       skeleton={nodes.Beta_Surface.skeleton}\n    //     />\n    //     <mesh\n    //       material={fbx.material}\n    //       geometry={fbx.geometry}\n    //       onClick={(e) => {\n    //         console.log(\"here\");\n    //       }}\n    //     />\n    //   </mesh>\n    // </mesh>\n\n    <mesh\n      material={fbx.material}\n      geometry={fbx.geometry}\n      onClick={(e) => {\n        console.log(e.target);\n      }}\n    />\n  );\n}\n\n//useGLTF.preload(\"../../../Xbot.glb\");\n"]},"metadata":{},"sourceType":"module"}