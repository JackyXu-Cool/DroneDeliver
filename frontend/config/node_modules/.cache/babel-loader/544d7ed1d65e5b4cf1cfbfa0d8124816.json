{"ast":null,"code":"var _jsxFileName = \"/Users/ac/Desktop/ui/src/App.js\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActivityParameterPage from \"./pages/ActivityParameterPage/ActivityParameterPage\";\nimport SearchParameterPage from \"./pages/SearchParametersPage/SearchParameterPage\";\nimport VideoSelectionPage from \"./pages/VideoSelectionPage/VideoSelectionPage\";\nimport SensorPlacementPage from \"./pages/SensorPlacementPage/SensorPlacementPage\";\n\nconst App = () => {\n  /* Global States */\n  const [activities, setActivities] = useState([]);\n  const [hasActivities, setHasActivites] = useState(false);\n  const [currentActivity, setCurrentActivity] = useState(\"\");\n  const [currentPath, setCurrentPath] = useState(\"/\");\n  /* Homapage States */\n\n  const [tags, setTags] = useState([]);\n  const suggested = [{\n    id: \"Singing\",\n    name: \"Singing\"\n  }, {\n    id: \"Dancing\",\n    name: \"Dancing\"\n  }, {\n    id: \"Kicking\",\n    name: \"Kicking\"\n  }, {\n    id: \"Typing\",\n    name: \"Typing\"\n  }, {\n    id: \"Running\",\n    name: \"Running\"\n  }, {\n    id: \"Lifting\",\n    name: \"Lifting\"\n  }];\n  /* Activity Parameter States */\n\n  const [activityParameters, setActivityParameters] = useState([]);\n  const [switched, setSwitch] = useState(false);\n  const [currentDisplay, setDisplay] = useState({});\n  const [hasActivityParameters, setHasActivityParameters] = useState(false);\n  const [allActivitiesCompleted, setAllActivitiesCompleted] = useState(false);\n  const [checkPopUp, setCheckPopUp] = useState(false);\n  /* Search Parameter States */\n\n  const [searchParameters, setSearchParameters] = useState([]);\n  const [hasSearchParameters, setHasSearchParameters] = useState(false);\n  const [allSearchParametersCompleted, setAllSearchParametersCompleted] = useState(false);\n  /* Sensor Placement States */\n\n  const [sensors, setSensors] = useState([]);\n  /***----------------------------Homepage Handlers-----------------------------***/\n\n  const addFromSelected = event => {\n    const suggested = event.target.name.toString();\n    console.log({\n      id: suggested,\n      text: suggested\n    });\n\n    if (!activities.some(a => a.id === suggested && a.name === suggested)) {\n      const tempActivities = [...activities];\n      const tempTags = [...tags];\n      tempTags.push({\n        id: suggested,\n        text: suggested\n      });\n      tempActivities.push({\n        id: suggested,\n        name: suggested\n      });\n      setHasActivites(true);\n      setActivities(tempActivities);\n      setTags(tempTags);\n      console.log(\"activities:\", activities);\n    }\n  };\n\n  const addActivityHandler = tag => {\n    const tempTags = [...tags];\n    tempTags.push(tag);\n    console.log(tags);\n    const tempActivities = [...activities];\n    tempActivities.push({\n      id: tag.id,\n      name: tag.text\n    });\n    setTags(tempTags);\n    setActivities(tempActivities);\n    setHasActivites(true);\n  };\n\n  const deleteActivityHandler = index => {\n    const tempTags = [...tags];\n    const tempActivities = [...activities];\n    tempTags.splice(index, 1);\n    tempActivities.splice(index, 1);\n    console.log(tempTags);\n\n    if (tempTags.length === 0) {\n      setHasActivites(false);\n    }\n\n    setTags(tempTags);\n    setActivities(tempActivities);\n  };\n\n  const routeToSearchParameters = event => {\n    const temp = [];\n    console.log(\"activity length: \", activities.length);\n\n    for (var i = 0; i < activities.length; i++) {\n      let current = activities[i];\n      let currentId = current.id;\n      let flag = false;\n      let tempActivity = {};\n\n      for (var j = 0; j < activityParameters.length; j++) {\n        if (activityParameters[j].id === currentId) {\n          flag = true;\n          tempActivity = activityParameters[j];\n          break;\n        }\n      }\n\n      if (flag) {\n        temp.push(tempActivity);\n      } else {\n        temp.push({\n          id: currentId,\n          fromFt: \"\",\n          fromIn: \"\",\n          toFt: \"\",\n          toIn: \"\",\n          fromBMI: \"\",\n          toBMI: \"\",\n          numPeople: \"\",\n          numVideo: \"\",\n          fromMin: \"\",\n          toMin: \"\",\n          resolution: \"\"\n        });\n      }\n    }\n\n    console.log(\"temp: \", temp);\n    setSearchParameters(temp); //console.log(\"actvitivy params\", activityParameters);\n\n    setCurrentActivity(activities[0].id);\n    setDisplay(temp[0]);\n\n    if (temp[0].forFt !== \"\" && temp[0].forIn !== \"\" && temp[0].toFt !== \"\" && temp[0].toIn !== \"\" && temp[0].fromBMI !== \"\" && temp[0].toBMI !== \"\" && temp[0].numPeople !== \"\" && temp[0].numVideo !== \"\" && temp[0].fromMin !== \"\" && temp[0].toMin !== \"\" && temp[0].resolution !== \"\") {\n      setHasSearchParameters(true);\n    } else {\n      setHasSearchParameters(false);\n    }\n\n    setSwitch(true);\n    setCurrentPath(\"/search-parameters\");\n  };\n  /***-------------------------End of Homepage Handlers-----------------------------***/\n\n  /***-----------------------Activity Parameter Page Handlers-----------------------***/\n  // const updateActivityParametersHandler = (event) => {\n  //   setSwitch(false);\n  //   console.log(switched);\n  //   const name = event.target.name;\n  //   let value = event.target.value;\n  //   const temp = activityParameters;\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === currentActivity) {\n  //       if (name === \"fromFt\") {\n  //         temp[i].fromFt = value;\n  //       } else if (name === \"fromIn\") {\n  //         temp[i].fromIn = value;\n  //       } else if (name === \"toFt\") {\n  //         temp[i].toFt = value;\n  //       } else if (name === \"toIn\") {\n  //         temp[i].toIn = value;\n  //       } else if (name === \"fromBMI\") {\n  //         temp[i].fromBMI = value;\n  //       } else if (name === \"toBMI\") {\n  //         temp[i].toBMI = value;\n  //       }\n  //       const activity = temp[i];\n  //       if (activity.id === currentActivity) {\n  //         console.log(\"activity check: \", activity);\n  //         if (\n  //           activity.fromFt !== \"\" &&\n  //           activity.fromIn !== \"\" &&\n  //           activity.fromBMI !== \"\" &&\n  //           activity.toBMI !== \"\" &&\n  //           activity.toIn !== \"\" &&\n  //           activity.toFt !== \"\"\n  //         ) {\n  //           setHasActivityParameters(true);\n  //           break;\n  //         } else {\n  //           setHasActivityParameters(false);\n  //         }\n  //       }\n  //     }\n  //   }\n  //   let flag = true;\n  //   for (var j = 0; j < temp.length; j++) {\n  //     const temp_activity = temp[j];\n  //     if (\n  //       temp_activity.fromFt === \"\" ||\n  //       temp_activity.fromIn === \"\" ||\n  //       temp_activity.fromBMI === \"\" ||\n  //       temp_activity.toBMI === \"\" ||\n  //       temp_activity.toIn === \"\" ||\n  //       temp_activity.toFt === \"\"\n  //     ) {\n  //       setAllActivitiesCompleted(false);\n  //       flag = false;\n  //       break;\n  //     }\n  //     console.log(activityParameters);\n  //     console.log(\"all completed?\", allActivitiesCompleted);\n  //   }\n  //   if (flag) {\n  //     setAllActivitiesCompleted(true);\n  //   }\n  //   setActivityParameters(temp);\n  // };\n  // const switchActivityParameters = (event) => {\n  //   const name = event.target.name;\n  //   const prev = currentActivity;\n  //   if (name !== prev) {\n  //     setSwitch(true);\n  //     setHasActivityParameters(false);\n  //     console.log(\"switched!!\");\n  //     console.log(currentPath);\n  //   }\n  //   setCurrentActivity(name);\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === name) {\n  //       console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n  //       setDisplay(activityParameters[i]);\n  //       console.log(activityParameters[i]);\n  //       if (switched) {\n  //         if (\n  //           activityParameters[i].fromFt !== \"\" &&\n  //           activityParameters[i].fromIn !== \"\" &&\n  //           activityParameters[i].fromBMI !== \"\" &&\n  //           activityParameters[i].toBMI !== \"\" &&\n  //           activityParameters[i].toIn !== \"\" &&\n  //           activityParameters[i].toFt !== \"\"\n  //         ) {\n  //           setHasActivityParameters(true);\n  //         }\n  //       }\n  //       console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n  //       break;\n  //     }\n  //   }\n  //   console.log(\"switched\", switched);\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === name) {\n  //       const activity = activityParameters[i];\n  //       if (activity.id === name) {\n  //         console.log(\"activity check: \", activity);\n  //         if (\n  //           activity.fromFt !== \"\" &&\n  //           activity.fromIn !== \"\" &&\n  //           activity.fromBMI !== \"\" &&\n  //           activity.toBMI !== \"\" &&\n  //           activity.toIn !== \"\" &&\n  //           activity.toFt !== \"\"\n  //         ) {\n  //           setHasActivityParameters(true);\n  //         }\n  //         break;\n  //       }\n  //     }\n  //   }\n  // };\n  // const routeBackToHomePage = (event) => {\n  //   setCurrentPath(\"/\");\n  //   setCurrentActivity(\"\");\n  // };\n  // const routeToVideoParameterPage = (event) => {\n  //   if (allActivitiesCompleted) {\n  //     setCheckPopUp(false);\n  //     const temp = [];\n  //     for (var i = 0; i < activities.length; i++) {\n  //       let current = activities[i];\n  //       let currentId = current.id;\n  //       let flag = false;\n  //       let tempActivity = {};\n  //       for (var j = 0; j < videoParameters.length; j++) {\n  //         if (videoParameters[j].id === currentId) {\n  //           flag = true;\n  //           tempActivity = videoParameters[j];\n  //           break;\n  //         }\n  //       }\n  //       if (flag) {\n  //         temp.push(tempActivity);\n  //       } else {\n  //         temp.push({\n  //           id: currentId,\n  //           numPeople: \"\",\n  //           numVideo: \"\",\n  //           fromMin: \"\",\n  //           toMin: \"\",\n  //           resolution: \"\",\n  //         });\n  //       }\n  //     }\n  //     setVideoParameters(temp);\n  //     console.log(\"video params\", videoParameters);\n  //     setCurrentActivity(activities[0].id);\n  //     setDisplay(temp[0]);\n  //     setSwitch(true);\n  //   } else {\n  //     setCheckPopUp(true);\n  //   }\n  // };\n  // const applyManually = (event) => {\n  //   setCheckPopUp(false);\n  // };\n  // const applyAllActivityParameters = (event) => {\n  //   var temp = [];\n  //   var base = null;\n  //   console.log(\"ACPs:\", activityParameters);\n  //   console.log(\"current display: \", currentDisplay);\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === currentActivity) {\n  //       setDisplay(activityParameters[i]);\n  //       base = activityParameters[i];\n  //     }\n  //   }\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     const temp_activity = activityParameters[i];\n  //     if (\n  //       temp_activity.fromFt === \"\" ||\n  //       temp_activity.fromIn === \"\" ||\n  //       temp_activity.fromBMI === \"\" ||\n  //       temp_activity.toBMI === \"\" ||\n  //       temp_activity.toIn === \"\" ||\n  //       temp_activity.toFt === \"\"\n  //     ) {\n  //       temp.push({\n  //         id: temp_activity.id,\n  //         fromFt: base.fromFt,\n  //         fromIn: base.fromIn,\n  //         fromBMI: base.fromBMI,\n  //         toBMI: base.toBMI,\n  //         toIn: base.toIn,\n  //         toFt: base.toFt,\n  //       });\n  //     } else {\n  //       temp.push({\n  //         id: temp_activity.id,\n  //         fromFt: temp_activity.fromFt,\n  //         fromIn: temp_activity.fromIn,\n  //         fromBMI: temp_activity.fromBMI,\n  //         toBMI: temp_activity.toBMI,\n  //         toIn: temp_activity.toIn,\n  //         toFt: temp_activity.toFt,\n  //       });\n  //     }\n  //   }\n  //   setActivityParameters(temp);\n  //   setAllActivitiesCompleted(true);\n  //   setCheckPopUp(false);\n  //   setHasActivityParameters(true);\n  //   console.log(\"ACPs:\", temp);\n  //   setSwitch(true);\n  // };\n\n  /***--------------------End of Activity Parameter Page Handlers----------------***/\n\n  /***-----------------------Search Parameter Page Handlers-----------------------***/\n\n\n  const updateSearchParametersHandler = event => {\n    setSwitch(false);\n    console.log(switched);\n    const name = event.target.name;\n    let value = event.target.value;\n    const temp = searchParameters;\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === currentActivity) {\n        if (name === \"fromFt\") {\n          temp[i].fromFt = value;\n        } else if (name === \"fromIn\") {\n          temp[i].fromIn = value;\n        } else if (name === \"toFt\") {\n          temp[i].toFt = value;\n        } else if (name === \"toIn\") {\n          temp[i].toIn = value;\n        } else if (name === \"fromBMI\") {\n          temp[i].fromBMI = value;\n        } else if (name === \"toBMI\") {\n          temp[i].toBMI = value;\n        } else if (name === \"numPeople\") {\n          temp[i].numPeople = value;\n        } else if (name === \"numVideo\") {\n          temp[i].numVideo = value;\n        } else if (name === \"fromMin\") {\n          temp[i].fromMin = value;\n        } else if (name === \"toMin\") {\n          temp[i].toMin = value;\n        } else if (name === \"resolution\") {\n          temp[i].resolution = value;\n        }\n\n        const activity = temp[i];\n\n        if (activity.id === currentActivity) {\n          if (activity.fromFt !== \"\" && activity.fromIn !== \"\" && activity.fromBMI !== \"\" && activity.toBMI !== \"\" && activity.toIn !== \"\" && activity.toFt !== \"\" && activity.numPeople !== \"\" && activity.numVideo !== \"\" && activity.fromMin !== \"\" && activity.toMin !== \"\" && activity.resolution !== \"\") {\n            setHasSearchParameters(true);\n            break;\n          } else {\n            setHasSearchParameters(false);\n          }\n        } //setDisplay(temp[i]);\n        //break;\n\n      }\n    }\n\n    let flag = true;\n\n    for (var j = 0; j < temp.length; j++) {\n      const temp_activity = temp[j];\n\n      if (temp_activity.fromFt === \"\" || temp_activity.fromIn === \"\" || temp_activity.fromBMI === \"\" || temp_activity.toBMI === \"\" || temp_activity.toIn === \"\" || temp_activity.toFt === \"\" || temp_activity.numPeople === \"\" || temp_activity.numVideo === \"\" || temp_activity.fromMin === \"\" || temp_activity.toMin === \"\" || temp_activity.resolution === \"\") {\n        setAllSearchParametersCompleted(false);\n        flag = false;\n        break;\n      }\n    }\n\n    if (flag) {\n      setAllSearchParametersCompleted(true);\n    }\n\n    setSearchParameters(temp); //console.log(\"video parameters: \", videoParameters);\n  };\n\n  const switchSearchParameters = event => {\n    const name = event.target.name;\n    const prev = currentActivity;\n\n    if (name !== prev) {\n      setSwitch(true);\n      setHasSearchParameters(false);\n      console.log(\"switched!!\"); //console.log(currentPath);\n    }\n\n    setCurrentActivity(name);\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === name) {\n        setDisplay(videoParameters[i]);\n\n        if (switched) {\n          if (searchParameters[i].fromFt !== \"\" && searchParameters[i].fromIn !== \"\" && searchParameters[i].fromBMI !== \"\" && searchParameters[i].toBMI !== \"\" && searchParameters[i].toIn !== \"\" && searchParameters[i].toFt !== \"\" && searchParameters[i].numPeople !== \"\" && searchParameters[i].numVideo !== \"\" && searchParameters[i].fromMin !== \"\" && searchParameters[i].toMin !== \"\" && searchParameters[i].resolution !== \"\") {\n            setHasSearchParameters(true);\n          }\n        }\n\n        break;\n      }\n    }\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === name) {\n        const activity = searchParameters[i];\n\n        if (activity.id === name) {\n          if (activity.fromFt !== \"\" && activity.fromIn !== \"\" && activity.fromBMI !== \"\" && activity.toBMI !== \"\" && activity.toIn !== \"\" && activity.toFt !== \"\" && activity.numPeople !== \"\" && activity.numVideo !== \"\" && activity.fromMin !== \"\" && activity.toMin !== \"\" && activity.resolution !== \"\") {\n            setHasVideoParameters(true);\n          }\n\n          break;\n        }\n      }\n    }\n  };\n\n  const routeBackToHomePage = event => {\n    setCurrentPath(\"/\"); //setCurrentActivity(activityParameters[0].id);\n    //setDisplay(activityParameters[0]);\n\n    setHasSearchParameters(true);\n  };\n\n  const routeToSensorPlacementPage = event => {\n    if (allSearchParametersCompleted) {\n      setCheckPopUp(false);\n      const temp = [];\n\n      for (var i = 0; i < activities.length; i++) {\n        let current = activities[i];\n        let currentId = current.id;\n        let flag = false;\n        let tempActivity = {};\n\n        for (var j = 0; j < searchParameters.length; j++) {\n          if (searchParameters[j].id === currentId) {\n            flag = true;\n            tempActivity = searchParameters[j];\n            break;\n          }\n        }\n\n        if (flag) {\n          temp.push(tempActivity);\n        } else {\n          temp.push({\n            id: currentId,\n            sensorLocations: []\n          });\n        }\n      }\n\n      console.log(\"temp: \", temp);\n      setSensors(temp); //console.log(\"sensors\", videoParameters);\n\n      setCurrentActivity(activities[0].id);\n      setDisplay(temp[0]);\n      setSwitch(true);\n    } else {\n      setCheckPopUp(true);\n    }\n  };\n\n  const applyAllSearchParameters = event => {\n    var temp = [];\n    var base = null; //console.log(\"ACPs:\", videoParameters);\n\n    console.log(\"current display: \", currentDisplay);\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === currentActivity) {\n        setDisplay(searchParameters[i]);\n        base = searchParameters[i];\n      }\n    }\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      console.log(\"here\");\n      const temp_activity = searchParameters[i];\n\n      if (temp_activity.fromFt === \"\" || temp_activity.fromIn === \"\" || temp_activity.toFt === \"\" || temp_activity.toIn === \"\" || temp_activity.fromBMI === \"\" || temp_activity.toBMI === \"\" || temp_activity.numPeople === \"\" || temp_activity.numVideo === \"\" || temp_activity.fromMin === \"\" || temp_activity.toMin === \"\" || temp_activity.resolution === \"\") {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: base.fromFt,\n          fromIn: base.fromIn,\n          toFt: base.toFt,\n          toIn: base.toIn,\n          fromBMI: base.fromBMI,\n          toBMI: base.toBMI,\n          numPeople: base.numPeople,\n          numVideo: base.numVideo,\n          fromMin: base.fromMin,\n          toMin: base.toMin,\n          resolution: base.resolution\n        });\n      } else {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: temp_activity.fromFt,\n          fromIn: temp_activity.fromIn,\n          toFt: temp_activity.toFt,\n          toIn: temp_activity.toIn,\n          fromBMI: temp_activity.fromBMI,\n          toBMI: temp_activity.toBMI,\n          numPeople: temp_activity.numPeople,\n          numVideo: temp_activity.numVideo,\n          fromMin: temp_activity.fromMin,\n          toMin: temp_activity.toMin,\n          resolution: temp_activity.resolution\n        });\n      }\n    }\n\n    setSearchParameters(temp);\n    setAllSearchParametersCompleted(true);\n    setCheckPopUp(false);\n    setHasSearchParameters(true);\n    console.log(\"ACPs:\", temp);\n    setSwitch(true);\n  };\n  /***---------------------End of Search Parameter Page Handlers------------------***/\n\n  /***-----------------------Video Selection Page Handlers-----------------------***/\n  //Video Selection Page Handlers here\n\n  /***--------------------End of Video Selection Page Handlers-------------------***/\n\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    className: classes.app,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HomePage, {\n    hasActivities: hasActivities,\n    suggested: suggested,\n    tags: tags,\n    addActivityHandler: addActivityHandler,\n    deleteActivityHandler: deleteActivityHandler,\n    addFromSelected: () => addFromSelected,\n    routeToSearchParameters: routeToSearchParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/search-parameters\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchParameterPage, {\n    activities: activities,\n    videoParameters: videoParameters,\n    currentActivity: currentActivity,\n    switched: switched,\n    currentDisplay: currentDisplay,\n    hasVideoParameters: hasVideoParameters,\n    allVideosCompleted: allVideosCompleted,\n    checkPopUp: checkPopUp,\n    updateVideoParametersHandler: updateVideoParametersHandler,\n    switchActivity: switchVideoParameters,\n    routeBackToActivityParameterPage: routeBackToActivityParameterPage,\n    routeToVideoSelectionPage: routeToVideoSelectionPage,\n    applyManually: applyManually,\n    applyAllVideoParameters: applyAllVideoParameters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/sensor-placement\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SensorPlacementPage, {\n    activities: activities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/video-selection\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VideoSelectionPage, {\n    activities: activities,\n    currentActivity: currentActivity,\n    switched: switched,\n    currentDisplay: currentDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ac/Desktop/ui/src/App.js"],"names":["React","useState","BrowserRouter","Route","classes","HomePage","ActivityParameterPage","SearchParameterPage","VideoSelectionPage","SensorPlacementPage","App","activities","setActivities","hasActivities","setHasActivites","currentActivity","setCurrentActivity","currentPath","setCurrentPath","tags","setTags","suggested","id","name","activityParameters","setActivityParameters","switched","setSwitch","currentDisplay","setDisplay","hasActivityParameters","setHasActivityParameters","allActivitiesCompleted","setAllActivitiesCompleted","checkPopUp","setCheckPopUp","searchParameters","setSearchParameters","hasSearchParameters","setHasSearchParameters","allSearchParametersCompleted","setAllSearchParametersCompleted","sensors","setSensors","addFromSelected","event","target","toString","console","log","text","some","a","tempActivities","tempTags","push","addActivityHandler","tag","deleteActivityHandler","index","splice","length","routeToSearchParameters","temp","i","current","currentId","flag","tempActivity","j","fromFt","fromIn","toFt","toIn","fromBMI","toBMI","numPeople","numVideo","fromMin","toMin","resolution","forFt","forIn","updateSearchParametersHandler","value","activity","temp_activity","switchSearchParameters","prev","videoParameters","setHasVideoParameters","routeBackToHomePage","routeToSensorPlacementPage","sensorLocations","applyAllSearchParameters","base","app","hasVideoParameters","allVideosCompleted","updateVideoParametersHandler","switchVideoParameters","routeBackToActivityParameterPage","routeToVideoSelectionPage","applyManually","applyAllVideoParameters"],"mappings":"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AD,CAAJ,CAAQS,IAAR,KAAiB,EAFjB,IAGAT,IAAI,CAAC,CAAD,CAAJ,CAAQU,IAAR,KAAiB,EAHjB,IAIAV,IAAI,CAAC,CAAD,CAAJ,CAAQW,OAAR,KAAoB,EAJpB,IAKAX,IAAI,CAAC,CAAD,CAAJ,CAAQY,KAAR,KAAkB,EALlB,IAMAZ,IAAI,CAAC,CAAD,CAAJ,CAAQa,SAAR,KAAsB,EANtB,IAOAb,IAAI,CAAC,CAAD,CAAJ,CAAQc,QAAR,KAAqB,EAPrB,IAQAd,IAAI,CAAC,CAAD,CAAJ,CAAQe,OAAR,KAAoB,EARpB,IASAf,IAAI,CAAC,CAAD,CAAJ,CAAQgB,KAAR,KAAkB,EATlB,IAUAhB,IAAI,CAAC,CAAD,CAAJ,CAAQiB,UAAR,KAAuB,EAXzB,EAYE;AACAzC,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,KAdD,MAcO;AACLA,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD;;AAEDZ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAT,IAAAA,cAAc,CAAC,oBAAD,CAAd;AACD,GA9DD;AA+DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA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","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport classes from \"./App.module.scss\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActivityParameterPage from \"./pages/ActivityParameterPage/ActivityParameterPage\";\nimport SearchParameterPage from \"./pages/SearchParametersPage/SearchParameterPage\";\nimport VideoSelectionPage from \"./pages/VideoSelectionPage/VideoSelectionPage\";\nimport SensorPlacementPage from \"./pages/SensorPlacementPage/SensorPlacementPage\";\n\nconst App = () => {\n  /* Global States */\n  const [activities, setActivities] = useState([]);\n  const [hasActivities, setHasActivites] = useState(false);\n  const [currentActivity, setCurrentActivity] = useState(\"\");\n  const [currentPath, setCurrentPath] = useState(\"/\");\n\n  /* Homapage States */\n  const [tags, setTags] = useState([]);\n  const suggested = [\n    { id: \"Singing\", name: \"Singing\" },\n    { id: \"Dancing\", name: \"Dancing\" },\n    { id: \"Kicking\", name: \"Kicking\" },\n    { id: \"Typing\", name: \"Typing\" },\n    { id: \"Running\", name: \"Running\" },\n    { id: \"Lifting\", name: \"Lifting\" },\n  ];\n\n  /* Activity Parameter States */\n  const [activityParameters, setActivityParameters] = useState([]);\n  const [switched, setSwitch] = useState(false);\n  const [currentDisplay, setDisplay] = useState({});\n  const [hasActivityParameters, setHasActivityParameters] = useState(false);\n  const [allActivitiesCompleted, setAllActivitiesCompleted] = useState(false);\n  const [checkPopUp, setCheckPopUp] = useState(false);\n\n  /* Search Parameter States */\n  const [searchParameters, setSearchParameters] = useState([]);\n  const [hasSearchParameters, setHasSearchParameters] = useState(false);\n  const [\n    allSearchParametersCompleted,\n    setAllSearchParametersCompleted,\n  ] = useState(false);\n\n  /* Sensor Placement States */\n  const [sensors, setSensors] = useState([]);\n\n  /***----------------------------Homepage Handlers-----------------------------***/\n  const addFromSelected = (event) => {\n    const suggested = event.target.name.toString();\n    console.log({\n      id: suggested,\n      text: suggested,\n    });\n    if (!activities.some((a) => a.id === suggested && a.name === suggested)) {\n      const tempActivities = [...activities];\n      const tempTags = [...tags];\n      tempTags.push({\n        id: suggested,\n        text: suggested,\n      });\n      tempActivities.push({\n        id: suggested,\n        name: suggested,\n      });\n      setHasActivites(true);\n      setActivities(tempActivities);\n      setTags(tempTags);\n      console.log(\"activities:\", activities);\n    }\n  };\n\n  const addActivityHandler = (tag) => {\n    const tempTags = [...tags];\n    tempTags.push(tag);\n    console.log(tags);\n    const tempActivities = [...activities];\n    tempActivities.push({\n      id: tag.id,\n      name: tag.text,\n    });\n\n    setTags(tempTags);\n    setActivities(tempActivities);\n    setHasActivites(true);\n  };\n\n  const deleteActivityHandler = (index) => {\n    const tempTags = [...tags];\n    const tempActivities = [...activities];\n\n    tempTags.splice(index, 1);\n    tempActivities.splice(index, 1);\n\n    console.log(tempTags);\n\n    if (tempTags.length === 0) {\n      setHasActivites(false);\n    }\n\n    setTags(tempTags);\n    setActivities(tempActivities);\n  };\n\n  const routeToSearchParameters = (event) => {\n    const temp = [];\n    console.log(\"activity length: \", activities.length);\n\n    for (var i = 0; i < activities.length; i++) {\n      let current = activities[i];\n      let currentId = current.id;\n      let flag = false;\n      let tempActivity = {};\n      for (var j = 0; j < activityParameters.length; j++) {\n        if (activityParameters[j].id === currentId) {\n          flag = true;\n          tempActivity = activityParameters[j];\n          break;\n        }\n      }\n      if (flag) {\n        temp.push(tempActivity);\n      } else {\n        temp.push({\n          id: currentId,\n          fromFt: \"\",\n          fromIn: \"\",\n          toFt: \"\",\n          toIn: \"\",\n          fromBMI: \"\",\n          toBMI: \"\",\n          numPeople: \"\",\n          numVideo: \"\",\n          fromMin: \"\",\n          toMin: \"\",\n          resolution: \"\",\n        });\n      }\n    }\n\n    console.log(\"temp: \", temp);\n    setSearchParameters(temp);\n    //console.log(\"actvitivy params\", activityParameters);\n    setCurrentActivity(activities[0].id);\n    setDisplay(temp[0]);\n\n    if (\n      temp[0].forFt !== \"\" &&\n      temp[0].forIn !== \"\" &&\n      temp[0].toFt !== \"\" &&\n      temp[0].toIn !== \"\" &&\n      temp[0].fromBMI !== \"\" &&\n      temp[0].toBMI !== \"\" &&\n      temp[0].numPeople !== \"\" &&\n      temp[0].numVideo !== \"\" &&\n      temp[0].fromMin !== \"\" &&\n      temp[0].toMin !== \"\" &&\n      temp[0].resolution !== \"\"\n    ) {\n      setHasSearchParameters(true);\n    } else {\n      setHasSearchParameters(false);\n    }\n\n    setSwitch(true);\n    setCurrentPath(\"/search-parameters\");\n  };\n  /***-------------------------End of Homepage Handlers-----------------------------***/\n\n  /***-----------------------Activity Parameter Page Handlers-----------------------***/\n  // const updateActivityParametersHandler = (event) => {\n  //   setSwitch(false);\n  //   console.log(switched);\n  //   const name = event.target.name;\n  //   let value = event.target.value;\n  //   const temp = activityParameters;\n\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === currentActivity) {\n  //       if (name === \"fromFt\") {\n  //         temp[i].fromFt = value;\n  //       } else if (name === \"fromIn\") {\n  //         temp[i].fromIn = value;\n  //       } else if (name === \"toFt\") {\n  //         temp[i].toFt = value;\n  //       } else if (name === \"toIn\") {\n  //         temp[i].toIn = value;\n  //       } else if (name === \"fromBMI\") {\n  //         temp[i].fromBMI = value;\n  //       } else if (name === \"toBMI\") {\n  //         temp[i].toBMI = value;\n  //       }\n\n  //       const activity = temp[i];\n  //       if (activity.id === currentActivity) {\n  //         console.log(\"activity check: \", activity);\n  //         if (\n  //           activity.fromFt !== \"\" &&\n  //           activity.fromIn !== \"\" &&\n  //           activity.fromBMI !== \"\" &&\n  //           activity.toBMI !== \"\" &&\n  //           activity.toIn !== \"\" &&\n  //           activity.toFt !== \"\"\n  //         ) {\n  //           setHasActivityParameters(true);\n  //           break;\n  //         } else {\n  //           setHasActivityParameters(false);\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   let flag = true;\n  //   for (var j = 0; j < temp.length; j++) {\n  //     const temp_activity = temp[j];\n  //     if (\n  //       temp_activity.fromFt === \"\" ||\n  //       temp_activity.fromIn === \"\" ||\n  //       temp_activity.fromBMI === \"\" ||\n  //       temp_activity.toBMI === \"\" ||\n  //       temp_activity.toIn === \"\" ||\n  //       temp_activity.toFt === \"\"\n  //     ) {\n  //       setAllActivitiesCompleted(false);\n  //       flag = false;\n  //       break;\n  //     }\n  //     console.log(activityParameters);\n  //     console.log(\"all completed?\", allActivitiesCompleted);\n  //   }\n  //   if (flag) {\n  //     setAllActivitiesCompleted(true);\n  //   }\n  //   setActivityParameters(temp);\n  // };\n\n  // const switchActivityParameters = (event) => {\n  //   const name = event.target.name;\n  //   const prev = currentActivity;\n  //   if (name !== prev) {\n  //     setSwitch(true);\n  //     setHasActivityParameters(false);\n  //     console.log(\"switched!!\");\n  //     console.log(currentPath);\n  //   }\n  //   setCurrentActivity(name);\n\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === name) {\n  //       console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n  //       setDisplay(activityParameters[i]);\n  //       console.log(activityParameters[i]);\n  //       if (switched) {\n  //         if (\n  //           activityParameters[i].fromFt !== \"\" &&\n  //           activityParameters[i].fromIn !== \"\" &&\n  //           activityParameters[i].fromBMI !== \"\" &&\n  //           activityParameters[i].toBMI !== \"\" &&\n  //           activityParameters[i].toIn !== \"\" &&\n  //           activityParameters[i].toFt !== \"\"\n  //         ) {\n  //           setHasActivityParameters(true);\n  //         }\n  //       }\n  //       console.log(\"Display fromFt: \", activityParameters[i].fromFt);\n  //       break;\n  //     }\n  //   }\n  //   console.log(\"switched\", switched);\n\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === name) {\n  //       const activity = activityParameters[i];\n  //       if (activity.id === name) {\n  //         console.log(\"activity check: \", activity);\n  //         if (\n  //           activity.fromFt !== \"\" &&\n  //           activity.fromIn !== \"\" &&\n  //           activity.fromBMI !== \"\" &&\n  //           activity.toBMI !== \"\" &&\n  //           activity.toIn !== \"\" &&\n  //           activity.toFt !== \"\"\n  //         ) {\n  //           setHasActivityParameters(true);\n  //         }\n  //         break;\n  //       }\n  //     }\n  //   }\n  // };\n\n  // const routeBackToHomePage = (event) => {\n  //   setCurrentPath(\"/\");\n  //   setCurrentActivity(\"\");\n  // };\n\n  // const routeToVideoParameterPage = (event) => {\n  //   if (allActivitiesCompleted) {\n  //     setCheckPopUp(false);\n  //     const temp = [];\n  //     for (var i = 0; i < activities.length; i++) {\n  //       let current = activities[i];\n  //       let currentId = current.id;\n  //       let flag = false;\n  //       let tempActivity = {};\n  //       for (var j = 0; j < videoParameters.length; j++) {\n  //         if (videoParameters[j].id === currentId) {\n  //           flag = true;\n  //           tempActivity = videoParameters[j];\n  //           break;\n  //         }\n  //       }\n  //       if (flag) {\n  //         temp.push(tempActivity);\n  //       } else {\n  //         temp.push({\n  //           id: currentId,\n  //           numPeople: \"\",\n  //           numVideo: \"\",\n  //           fromMin: \"\",\n  //           toMin: \"\",\n  //           resolution: \"\",\n  //         });\n  //       }\n  //     }\n  //     setVideoParameters(temp);\n  //     console.log(\"video params\", videoParameters);\n  //     setCurrentActivity(activities[0].id);\n  //     setDisplay(temp[0]);\n  //     setSwitch(true);\n  //   } else {\n  //     setCheckPopUp(true);\n  //   }\n  // };\n\n  // const applyManually = (event) => {\n  //   setCheckPopUp(false);\n  // };\n\n  // const applyAllActivityParameters = (event) => {\n  //   var temp = [];\n  //   var base = null;\n\n  //   console.log(\"ACPs:\", activityParameters);\n\n  //   console.log(\"current display: \", currentDisplay);\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     if (activityParameters[i].id === currentActivity) {\n  //       setDisplay(activityParameters[i]);\n  //       base = activityParameters[i];\n  //     }\n  //   }\n\n  //   for (var i = 0; i < activityParameters.length; i++) {\n  //     const temp_activity = activityParameters[i];\n  //     if (\n  //       temp_activity.fromFt === \"\" ||\n  //       temp_activity.fromIn === \"\" ||\n  //       temp_activity.fromBMI === \"\" ||\n  //       temp_activity.toBMI === \"\" ||\n  //       temp_activity.toIn === \"\" ||\n  //       temp_activity.toFt === \"\"\n  //     ) {\n  //       temp.push({\n  //         id: temp_activity.id,\n  //         fromFt: base.fromFt,\n  //         fromIn: base.fromIn,\n  //         fromBMI: base.fromBMI,\n  //         toBMI: base.toBMI,\n  //         toIn: base.toIn,\n  //         toFt: base.toFt,\n  //       });\n  //     } else {\n  //       temp.push({\n  //         id: temp_activity.id,\n  //         fromFt: temp_activity.fromFt,\n  //         fromIn: temp_activity.fromIn,\n  //         fromBMI: temp_activity.fromBMI,\n  //         toBMI: temp_activity.toBMI,\n  //         toIn: temp_activity.toIn,\n  //         toFt: temp_activity.toFt,\n  //       });\n  //     }\n  //   }\n  //   setActivityParameters(temp);\n  //   setAllActivitiesCompleted(true);\n  //   setCheckPopUp(false);\n  //   setHasActivityParameters(true);\n  //   console.log(\"ACPs:\", temp);\n  //   setSwitch(true);\n  // };\n\n  /***--------------------End of Activity Parameter Page Handlers----------------***/\n\n  /***-----------------------Search Parameter Page Handlers-----------------------***/\n\n  const updateSearchParametersHandler = (event) => {\n    setSwitch(false);\n    console.log(switched);\n    const name = event.target.name;\n    let value = event.target.value;\n    const temp = searchParameters;\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === currentActivity) {\n        if (name === \"fromFt\") {\n          temp[i].fromFt = value;\n        } else if (name === \"fromIn\") {\n          temp[i].fromIn = value;\n        } else if (name === \"toFt\") {\n          temp[i].toFt = value;\n        } else if (name === \"toIn\") {\n          temp[i].toIn = value;\n        } else if (name === \"fromBMI\") {\n          temp[i].fromBMI = value;\n        } else if (name === \"toBMI\") {\n          temp[i].toBMI = value;\n        } else if (name === \"numPeople\") {\n          temp[i].numPeople = value;\n        } else if (name === \"numVideo\") {\n          temp[i].numVideo = value;\n        } else if (name === \"fromMin\") {\n          temp[i].fromMin = value;\n        } else if (name === \"toMin\") {\n          temp[i].toMin = value;\n        } else if (name === \"resolution\") {\n          temp[i].resolution = value;\n        }\n\n        const activity = temp[i];\n        if (activity.id === currentActivity) {\n          if (\n            activity.fromFt !== \"\" &&\n            activity.fromIn !== \"\" &&\n            activity.fromBMI !== \"\" &&\n            activity.toBMI !== \"\" &&\n            activity.toIn !== \"\" &&\n            activity.toFt !== \"\" &&\n            activity.numPeople !== \"\" &&\n            activity.numVideo !== \"\" &&\n            activity.fromMin !== \"\" &&\n            activity.toMin !== \"\" &&\n            activity.resolution !== \"\"\n          ) {\n            setHasSearchParameters(true);\n            break;\n          } else {\n            setHasSearchParameters(false);\n          }\n        }\n        //setDisplay(temp[i]);\n        //break;\n      }\n    }\n\n    let flag = true;\n    for (var j = 0; j < temp.length; j++) {\n      const temp_activity = temp[j];\n      if (\n        temp_activity.fromFt === \"\" ||\n        temp_activity.fromIn === \"\" ||\n        temp_activity.fromBMI === \"\" ||\n        temp_activity.toBMI === \"\" ||\n        temp_activity.toIn === \"\" ||\n        temp_activity.toFt === \"\" ||\n        temp_activity.numPeople === \"\" ||\n        temp_activity.numVideo === \"\" ||\n        temp_activity.fromMin === \"\" ||\n        temp_activity.toMin === \"\" ||\n        temp_activity.resolution === \"\"\n      ) {\n        setAllSearchParametersCompleted(false);\n        flag = false;\n        break;\n      }\n    }\n\n    if (flag) {\n      setAllSearchParametersCompleted(true);\n    }\n\n    setSearchParameters(temp);\n    //console.log(\"video parameters: \", videoParameters);\n  };\n\n  const switchSearchParameters = (event) => {\n    const name = event.target.name;\n    const prev = currentActivity;\n    if (name !== prev) {\n      setSwitch(true);\n      setHasSearchParameters(false);\n      console.log(\"switched!!\");\n      //console.log(currentPath);\n    }\n    setCurrentActivity(name);\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === name) {\n        setDisplay(videoParameters[i]);\n        if (switched) {\n          if (\n            searchParameters[i].fromFt !== \"\" &&\n            searchParameters[i].fromIn !== \"\" &&\n            searchParameters[i].fromBMI !== \"\" &&\n            searchParameters[i].toBMI !== \"\" &&\n            searchParameters[i].toIn !== \"\" &&\n            searchParameters[i].toFt !== \"\" &&\n            searchParameters[i].numPeople !== \"\" &&\n            searchParameters[i].numVideo !== \"\" &&\n            searchParameters[i].fromMin !== \"\" &&\n            searchParameters[i].toMin !== \"\" &&\n            searchParameters[i].resolution !== \"\"\n          ) {\n            setHasSearchParameters(true);\n          }\n        }\n        break;\n      }\n    }\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === name) {\n        const activity = searchParameters[i];\n        if (activity.id === name) {\n          if (\n            activity.fromFt !== \"\" &&\n            activity.fromIn !== \"\" &&\n            activity.fromBMI !== \"\" &&\n            activity.toBMI !== \"\" &&\n            activity.toIn !== \"\" &&\n            activity.toFt !== \"\" &&\n            activity.numPeople !== \"\" &&\n            activity.numVideo !== \"\" &&\n            activity.fromMin !== \"\" &&\n            activity.toMin !== \"\" &&\n            activity.resolution !== \"\"\n          ) {\n            setHasVideoParameters(true);\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  const routeBackToHomePage = (event) => {\n    setCurrentPath(\"/\");\n    //setCurrentActivity(activityParameters[0].id);\n    //setDisplay(activityParameters[0]);\n    setHasSearchParameters(true);\n  };\n\n  const routeToSensorPlacementPage = (event) => {\n    if (allSearchParametersCompleted) {\n      setCheckPopUp(false);\n      const temp = [];\n      for (var i = 0; i < activities.length; i++) {\n        let current = activities[i];\n        let currentId = current.id;\n        let flag = false;\n        let tempActivity = {};\n        for (var j = 0; j < searchParameters.length; j++) {\n          if (searchParameters[j].id === currentId) {\n            flag = true;\n            tempActivity = searchParameters[j];\n            break;\n          }\n        }\n        if (flag) {\n          temp.push(tempActivity);\n        } else {\n          temp.push({\n            id: currentId,\n            sensorLocations: [],\n          });\n        }\n      }\n      console.log(\"temp: \", temp);\n      setSensors(temp);\n      //console.log(\"sensors\", videoParameters);\n      setCurrentActivity(activities[0].id);\n      setDisplay(temp[0]);\n      setSwitch(true);\n    } else {\n      setCheckPopUp(true);\n    }\n  };\n\n  const applyAllSearchParameters = (event) => {\n    var temp = [];\n    var base = null;\n\n    //console.log(\"ACPs:\", videoParameters);\n\n    console.log(\"current display: \", currentDisplay);\n    for (var i = 0; i < searchParameters.length; i++) {\n      if (searchParameters[i].id === currentActivity) {\n        setDisplay(searchParameters[i]);\n        base = searchParameters[i];\n      }\n    }\n\n    for (var i = 0; i < searchParameters.length; i++) {\n      console.log(\"here\");\n      const temp_activity = searchParameters[i];\n      if (\n        temp_activity.fromFt === \"\" ||\n        temp_activity.fromIn === \"\" ||\n        temp_activity.toFt === \"\" ||\n        temp_activity.toIn === \"\" ||\n        temp_activity.fromBMI === \"\" ||\n        temp_activity.toBMI === \"\" ||\n        temp_activity.numPeople === \"\" ||\n        temp_activity.numVideo === \"\" ||\n        temp_activity.fromMin === \"\" ||\n        temp_activity.toMin === \"\" ||\n        temp_activity.resolution === \"\"\n      ) {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: base.fromFt,\n          fromIn: base.fromIn,\n          toFt: base.toFt,\n          toIn: base.toIn,\n          fromBMI: base.fromBMI,\n          toBMI: base.toBMI,\n          numPeople: base.numPeople,\n          numVideo: base.numVideo,\n          fromMin: base.fromMin,\n          toMin: base.toMin,\n          resolution: base.resolution,\n        });\n      } else {\n        temp.push({\n          id: temp_activity.id,\n          fromFt: temp_activity.fromFt,\n          fromIn: temp_activity.fromIn,\n          toFt: temp_activity.toFt,\n          toIn: temp_activity.toIn,\n          fromBMI: temp_activity.fromBMI,\n          toBMI: temp_activity.toBMI,\n          numPeople: temp_activity.numPeople,\n          numVideo: temp_activity.numVideo,\n          fromMin: temp_activity.fromMin,\n          toMin: temp_activity.toMin,\n          resolution: temp_activity.resolution,\n        });\n      }\n    }\n    setSearchParameters(temp);\n    setAllSearchParametersCompleted(true);\n    setCheckPopUp(false);\n    setHasSearchParameters(true);\n    console.log(\"ACPs:\", temp);\n    setSwitch(true);\n  };\n\n  /***---------------------End of Search Parameter Page Handlers------------------***/\n\n  /***-----------------------Video Selection Page Handlers-----------------------***/\n  //Video Selection Page Handlers here\n\n  /***--------------------End of Video Selection Page Handlers-------------------***/\n\n  return (\n    <BrowserRouter className={classes.app}>\n      <Route path={\"/\"} exact>\n        <HomePage\n          hasActivities={hasActivities}\n          suggested={suggested}\n          tags={tags}\n          addActivityHandler={addActivityHandler}\n          deleteActivityHandler={deleteActivityHandler}\n          addFromSelected={() => addFromSelected}\n          routeToSearchParameters={routeToSearchParameters}\n        />\n      </Route>\n      {/*<Route path={\"/activity-parameters\"} exact>\n        <ActivityParameterPage\n          activities={activities}\n          activityParameters={activityParameters}\n          currentActivity={currentActivity}\n          switched={switched}\n          currentDisplay={currentDisplay}\n          hasActivityParameters={hasActivityParameters}\n          allActivitiesCompleted={allActivitiesCompleted}\n          checkPopUp={checkPopUp}\n          updateParametersHandler={updateActivityParametersHandler}\n          switchActivity={switchActivityParameters}\n          routeBackToHomePage={routeBackToHomePage}\n          routeToVideoParameterPage={routeToVideoParameterPage}\n          applyManually={applyManually}\n          applyAllActivityParameters={applyAllActivityParameters}\n        />\n      </Route> */}\n      <Route path={\"/search-parameters\"} exact>\n        <SearchParameterPage\n          activities={activities}\n          videoParameters={videoParameters}\n          currentActivity={currentActivity}\n          switched={switched}\n          currentDisplay={currentDisplay}\n          hasVideoParameters={hasVideoParameters}\n          allVideosCompleted={allVideosCompleted}\n          checkPopUp={checkPopUp}\n          updateVideoParametersHandler={updateVideoParametersHandler}\n          switchActivity={switchVideoParameters}\n          routeBackToActivityParameterPage={routeBackToActivityParameterPage}\n          routeToVideoSelectionPage={routeToVideoSelectionPage}\n          applyManually={applyManually}\n          applyAllVideoParameters={applyAllVideoParameters}\n        />\n      </Route>\n      <Route path={\"/sensor-placement\"} exact>\n        <SensorPlacementPage activities={activities} />\n      </Route>\n      <Route path={\"/video-selection\"} exact>\n        <VideoSelectionPage\n          activities={activities}\n          currentActivity={currentActivity}\n          switched={switched}\n          currentDisplay={currentDisplay}\n        />\n      </Route>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}